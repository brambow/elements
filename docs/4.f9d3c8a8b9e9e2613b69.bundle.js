(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{918:function(module,exports){module.exports={classes:{CONTROL_BASE:"mapboxgl-ctrl",CONTROL_PREFIX:"mapboxgl-ctrl-",CONTROL_BUTTON:"mapbox-gl-draw_ctrl-draw-btn",CONTROL_BUTTON_LINE:"mapbox-gl-draw_line",CONTROL_BUTTON_POLYGON:"mapbox-gl-draw_polygon",CONTROL_BUTTON_POINT:"mapbox-gl-draw_point",CONTROL_BUTTON_TRASH:"mapbox-gl-draw_trash",CONTROL_BUTTON_COMBINE_FEATURES:"mapbox-gl-draw_combine",CONTROL_BUTTON_UNCOMBINE_FEATURES:"mapbox-gl-draw_uncombine",CONTROL_GROUP:"mapboxgl-ctrl-group",ATTRIBUTION:"mapboxgl-ctrl-attrib",ACTIVE_BUTTON:"active",BOX_SELECT:"mapbox-gl-draw_boxselect"},sources:{HOT:"mapbox-gl-draw-hot",COLD:"mapbox-gl-draw-cold"},cursors:{ADD:"add",MOVE:"move",DRAG:"drag",POINTER:"pointer",NONE:"none"},types:{POLYGON:"polygon",LINE:"line_string",POINT:"point"},geojsonTypes:{FEATURE:"Feature",POLYGON:"Polygon",LINE_STRING:"LineString",POINT:"Point",FEATURE_COLLECTION:"FeatureCollection",MULTI_PREFIX:"Multi",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon"},modes:{DRAW_LINE_STRING:"draw_line_string",DRAW_POLYGON:"draw_polygon",DRAW_POINT:"draw_point",SIMPLE_SELECT:"simple_select",DIRECT_SELECT:"direct_select",STATIC:"static"},events:{CREATE:"draw.create",DELETE:"draw.delete",UPDATE:"draw.update",SELECTION_CHANGE:"draw.selectionchange",MODE_CHANGE:"draw.modechange",ACTIONABLE:"draw.actionable",RENDER:"draw.render",COMBINE_FEATURES:"draw.combine",UNCOMBINE_FEATURES:"draw.uncombine"},updateActions:{MOVE:"move",CHANGE_COORDINATES:"change_coordinates"},meta:{FEATURE:"feature",MIDPOINT:"midpoint",VERTEX:"vertex"},activeStates:{ACTIVE:"true",INACTIVE:"false"},interactions:["scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate"],LAT_MIN:-90,LAT_RENDERED_MIN:-85,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}},919:function(module,exports,__webpack_require__){const Constants=__webpack_require__(918);module.exports={isOfMetaType:function(type){return function(e){const featureTarget=e.featureTarget;return!!featureTarget&&(!!featureTarget.properties&&featureTarget.properties.meta===type)}},isShiftMousedown:function(e){return!!e.originalEvent&&(!!e.originalEvent.shiftKey&&0===e.originalEvent.button)},isActiveFeature:function(e){return!!e.featureTarget&&(!!e.featureTarget.properties&&(e.featureTarget.properties.active===Constants.activeStates.ACTIVE&&e.featureTarget.properties.meta===Constants.meta.FEATURE))},isInactiveFeature:function(e){return!!e.featureTarget&&(!!e.featureTarget.properties&&(e.featureTarget.properties.active===Constants.activeStates.INACTIVE&&e.featureTarget.properties.meta===Constants.meta.FEATURE))},noTarget:function(e){return void 0===e.featureTarget},isFeature:function(e){return!!e.featureTarget&&(!!e.featureTarget.properties&&e.featureTarget.properties.meta===Constants.meta.FEATURE)},isVertex:function(e){const featureTarget=e.featureTarget;return!!featureTarget&&(!!featureTarget.properties&&featureTarget.properties.meta===Constants.meta.VERTEX)},isShiftDown:function(e){return!!e.originalEvent&&!0===e.originalEvent.shiftKey},isEscapeKey:function(e){return 27===e.keyCode},isEnterKey:function(e){return 13===e.keyCode},true:function(){return!0}}},920:function(module,exports,__webpack_require__){const sortFeatures=__webpack_require__(942),mapEventToBoundingBox=__webpack_require__(945),Constants=__webpack_require__(918),StringSet=__webpack_require__(921),META_TYPES=[Constants.meta.FEATURE,Constants.meta.MIDPOINT,Constants.meta.VERTEX];function featuresAt(event,bbox,ctx,buffer){if(null===ctx.map)return[];const box=event?mapEventToBoundingBox(event,buffer):bbox,queryParams={};ctx.options.styles&&(queryParams.layers=ctx.options.styles.map(s=>s.id));const features=ctx.map.queryRenderedFeatures(box,queryParams).filter(feature=>-1!==META_TYPES.indexOf(feature.properties.meta)),featureIds=new StringSet,uniqueFeatures=[];return features.forEach(feature=>{const featureId=feature.properties.id;featureIds.has(featureId)||(featureIds.add(featureId),uniqueFeatures.push(feature))}),sortFeatures(uniqueFeatures)}module.exports={click:function featuresAtClick(event,bbox,ctx){return featuresAt(event,bbox,ctx,ctx.options.clickBuffer)},touch:function featuresAtTouch(event,bbox,ctx){return featuresAt(event,bbox,ctx,ctx.options.touchBuffer)}}},921:function(module,exports){function StringSet(items){if(this._items={},this._nums={},this._length=items?items.length:0,items)for(let i=0,l=items.length;i<l;i++)this.add(items[i]),void 0!==items[i]&&("string"==typeof items[i]?this._items[items[i]]=i:this._nums[items[i]]=i)}StringSet.prototype.add=function(x){return this.has(x)?this:(this._length++,"string"==typeof x?this._items[x]=this._length:this._nums[x]=this._length,this)},StringSet.prototype.delete=function(x){return!1===this.has(x)?this:(this._length--,delete this._items[x],delete this._nums[x],this)},StringSet.prototype.has=function(x){return("string"==typeof x||"number"==typeof x)&&(void 0!==this._items[x]||void 0!==this._nums[x])},StringSet.prototype.values=function(){const values=[];return Object.keys(this._items).forEach(k=>{values.push({k:k,v:this._items[k]})}),Object.keys(this._nums).forEach(k=>{values.push({k:JSON.parse(k),v:this._nums[k]})}),values.sort((a,b)=>a.v-b.v).map(a=>a.k)},StringSet.prototype.clear=function(){return this._length=0,this._items={},this._nums={},this},module.exports=StringSet},922:function(module,exports,__webpack_require__){const hat=__webpack_require__(926),Constants=__webpack_require__(918),Feature=function(ctx,geojson){this.ctx=ctx,this.properties=geojson.properties||{},this.coordinates=geojson.geometry.coordinates,this.id=geojson.id||hat(),this.type=geojson.geometry.type};Feature.prototype.changed=function(){this.ctx.store.featureChanged(this.id)},Feature.prototype.incomingCoords=function(coords){this.setCoordinates(coords)},Feature.prototype.setCoordinates=function(coords){this.coordinates=coords,this.changed()},Feature.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.coordinates))},Feature.prototype.setProperty=function(property,value){this.properties[property]=value},Feature.prototype.toGeoJSON=function(){return JSON.parse(JSON.stringify({id:this.id,type:Constants.geojsonTypes.FEATURE,properties:this.properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}))},Feature.prototype.internal=function(mode){const properties={id:this.id,meta:Constants.meta.FEATURE,"meta:type":this.type,active:Constants.activeStates.INACTIVE,mode:mode};if(this.ctx.options.userProperties)for(const name in this.properties)properties[`user_${name}`]=this.properties[name];return{type:Constants.geojsonTypes.FEATURE,properties:properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}},module.exports=Feature},923:function(module,exports,__webpack_require__){const Feature=__webpack_require__(922),Constants=__webpack_require__(918),hat=__webpack_require__(926),models={MultiPoint:__webpack_require__(925),MultiLineString:__webpack_require__(927),MultiPolygon:__webpack_require__(928)},takeAction=(features,action,path,lng,lat)=>{const parts=path.split("."),idx=parseInt(parts[0],10),tail=parts[1]?parts.slice(1).join("."):null;return features[idx][action](tail,lng,lat)},MultiFeature=function(ctx,geojson){if(Feature.call(this,ctx,geojson),delete this.coordinates,this.model=models[geojson.geometry.type],void 0===this.model)throw new TypeError(`${geojson.geometry.type} is not a valid type`);this.features=this._coordinatesToFeatures(geojson.geometry.coordinates)};(MultiFeature.prototype=Object.create(Feature.prototype))._coordinatesToFeatures=function(coordinates){const Model=this.model.bind(this);return coordinates.map(coords=>new Model(this.ctx,{id:hat(),type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{coordinates:coords,type:this.type.replace("Multi","")}}))},MultiFeature.prototype.isValid=function(){return this.features.every(f=>f.isValid())},MultiFeature.prototype.setCoordinates=function(coords){this.features=this._coordinatesToFeatures(coords),this.changed()},MultiFeature.prototype.getCoordinate=function(path){return takeAction(this.features,"getCoordinate",path)},MultiFeature.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.features.map(f=>f.type===Constants.geojsonTypes.POLYGON?f.getCoordinates():f.coordinates)))},MultiFeature.prototype.updateCoordinate=function(path,lng,lat){takeAction(this.features,"updateCoordinate",path,lng,lat),this.changed()},MultiFeature.prototype.addCoordinate=function(path,lng,lat){takeAction(this.features,"addCoordinate",path,lng,lat),this.changed()},MultiFeature.prototype.removeCoordinate=function(path){takeAction(this.features,"removeCoordinate",path),this.changed()},MultiFeature.prototype.getFeatures=function(){return this.features},module.exports=MultiFeature},924:function(module,exports){module.exports={enable(ctx){setTimeout(()=>{ctx.map&&ctx.map.doubleClickZoom&&ctx._ctx&&ctx._ctx.store&&ctx._ctx.store.getInitialConfigValue&&ctx._ctx.store.getInitialConfigValue("doubleClickZoom")&&ctx.map.doubleClickZoom.enable()},0)},disable(ctx){setTimeout(()=>{ctx.map&&ctx.map.doubleClickZoom&&ctx.map.doubleClickZoom.disable()},0)}}},925:function(module,exports,__webpack_require__){const Feature=__webpack_require__(922),Point=function(ctx,geojson){Feature.call(this,ctx,geojson)};(Point.prototype=Object.create(Feature.prototype)).isValid=function(){return"number"==typeof this.coordinates[0]&&"number"==typeof this.coordinates[1]},Point.prototype.updateCoordinate=function(pathOrLng,lngOrLat,lat){3===arguments.length?this.coordinates=[lngOrLat,lat]:this.coordinates=[pathOrLng,lngOrLat],this.changed()},Point.prototype.getCoordinate=function(){return this.getCoordinates()},module.exports=Point},926:function(module,exports){var hat=module.exports=function(bits,base){if(base||(base=16),void 0===bits&&(bits=128),bits<=0)return"0";for(var digits=Math.log(Math.pow(2,bits))/Math.log(base),i=2;digits===1/0;i*=2)digits=Math.log(Math.pow(2,bits/i))/Math.log(base)*i;var rem=digits-Math.floor(digits),res="";for(i=0;i<Math.floor(digits);i++){res=Math.floor(Math.random()*base).toString(base)+res}if(rem){var b=Math.pow(base,rem);res=Math.floor(Math.random()*b).toString(base)+res}var parsed=parseInt(res,base);return parsed!==1/0&&parsed>=Math.pow(2,bits)?hat(bits,base):res};hat.rack=function(bits,base,expandBy){var fn=function(data){var iters=0;do{if(iters++>10){if(!expandBy)throw new Error("too many ID collisions, use more bits");bits+=expandBy}var id=hat(bits,base)}while(Object.hasOwnProperty.call(hats,id));return hats[id]=data,id},hats=fn.hats={};return fn.get=function(id){return fn.hats[id]},fn.set=function(id,value){return fn.hats[id]=value,fn},fn.bits=bits||128,fn.base=base||16,fn}},927:function(module,exports,__webpack_require__){const Feature=__webpack_require__(922),LineString=function(ctx,geojson){Feature.call(this,ctx,geojson)};(LineString.prototype=Object.create(Feature.prototype)).isValid=function(){return this.coordinates.length>1},LineString.prototype.addCoordinate=function(path,lng,lat){this.changed();const id=parseInt(path,10);this.coordinates.splice(id,0,[lng,lat])},LineString.prototype.getCoordinate=function(path){const id=parseInt(path,10);return JSON.parse(JSON.stringify(this.coordinates[id]))},LineString.prototype.removeCoordinate=function(path){this.changed(),this.coordinates.splice(parseInt(path,10),1)},LineString.prototype.updateCoordinate=function(path,lng,lat){const id=parseInt(path,10);this.coordinates[id]=[lng,lat],this.changed()},module.exports=LineString},928:function(module,exports,__webpack_require__){const Feature=__webpack_require__(922),Polygon=function(ctx,geojson){Feature.call(this,ctx,geojson),this.coordinates=this.coordinates.map(ring=>ring.slice(0,-1))};(Polygon.prototype=Object.create(Feature.prototype)).isValid=function(){return 0!==this.coordinates.length&&this.coordinates.every(ring=>ring.length>2)},Polygon.prototype.incomingCoords=function(coords){this.coordinates=coords.map(ring=>ring.slice(0,-1)),this.changed()},Polygon.prototype.setCoordinates=function(coords){this.coordinates=coords,this.changed()},Polygon.prototype.addCoordinate=function(path,lng,lat){this.changed();const ids=path.split(".").map(x=>parseInt(x,10));this.coordinates[ids[0]].splice(ids[1],0,[lng,lat])},Polygon.prototype.removeCoordinate=function(path){this.changed();const ids=path.split(".").map(x=>parseInt(x,10)),ring=this.coordinates[ids[0]];ring&&(ring.splice(ids[1],1),ring.length<3&&this.coordinates.splice(ids[0],1))},Polygon.prototype.getCoordinate=function(path){const ids=path.split(".").map(x=>parseInt(x,10)),ring=this.coordinates[ids[0]];return JSON.parse(JSON.stringify(ring[ids[1]]))},Polygon.prototype.getCoordinates=function(){return this.coordinates.map(coords=>coords.concat([coords[0]]))},Polygon.prototype.updateCoordinate=function(path,lng,lat){this.changed();const parts=path.split("."),ringId=parseInt(parts[0],10),coordId=parseInt(parts[1],10);void 0===this.coordinates[ringId]&&(this.coordinates[ringId]=[]),this.coordinates[ringId][coordId]=[lng,lat]},module.exports=Polygon},929:function(module,exports){module.exports=function extend(){for(var target={},i=0;i<arguments.length;i++){var source=arguments[i];for(var key in source)hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};var hasOwnProperty=Object.prototype.hasOwnProperty},930:function(module,exports,__webpack_require__){const Constants=__webpack_require__(918);module.exports=function(parentId,coordinates,path,selected){return{type:Constants.geojsonTypes.FEATURE,properties:{meta:Constants.meta.VERTEX,parent:parentId,coord_path:path,active:selected?Constants.activeStates.ACTIVE:Constants.activeStates.INACTIVE},geometry:{type:Constants.geojsonTypes.POINT,coordinates:coordinates}}}},931:function(module,exports){module.exports=function(a,b){const x=a.x-b.x,y=a.y-b.y;return Math.sqrt(x*x+y*y)}},932:function(module,exports,__webpack_require__){module.exports={simple_select:__webpack_require__(958),direct_select:__webpack_require__(968),draw_point:__webpack_require__(969),draw_polygon:__webpack_require__(970),draw_line_string:__webpack_require__(971)}},933:function(module,exports,__webpack_require__){const createVertex=__webpack_require__(930),createMidpoint=__webpack_require__(961),Constants=__webpack_require__(918);module.exports=function createSupplementaryPoints(geojson,options={},basePath=null){const{type:type,coordinates:coordinates}=geojson.geometry,featureId=geojson.properties&&geojson.properties.id;let supplementaryPoints=[];function processLine(line,lineBasePath){let firstPointString="",lastVertex=null;line.forEach((point,pointIndex)=>{const pointPath=null!=lineBasePath?`${lineBasePath}.${pointIndex}`:String(pointIndex),vertex=createVertex(featureId,point,pointPath,isSelectedPath(pointPath));if(options.midpoints&&lastVertex){const midpoint=createMidpoint(featureId,lastVertex,vertex,options.map);midpoint&&supplementaryPoints.push(midpoint)}lastVertex=vertex;const stringifiedPoint=JSON.stringify(point);firstPointString!==stringifiedPoint&&supplementaryPoints.push(vertex),0===pointIndex&&(firstPointString=stringifiedPoint)})}function isSelectedPath(path){return!!options.selectedPaths&&-1!==options.selectedPaths.indexOf(path)}return type===Constants.geojsonTypes.POINT?supplementaryPoints.push(createVertex(featureId,coordinates,basePath,isSelectedPath(basePath))):type===Constants.geojsonTypes.POLYGON?coordinates.forEach((line,lineIndex)=>{processLine(line,null!==basePath?`${basePath}.${lineIndex}`:String(lineIndex))}):type===Constants.geojsonTypes.LINE_STRING?processLine(coordinates,basePath):0===type.indexOf(Constants.geojsonTypes.MULTI_PREFIX)&&function processMultiGeometry(){const subType=type.replace(Constants.geojsonTypes.MULTI_PREFIX,"");coordinates.forEach((subCoordinates,index)=>{const subFeature={type:Constants.geojsonTypes.FEATURE,properties:geojson.properties,geometry:{type:subType,coordinates:subCoordinates}};supplementaryPoints=supplementaryPoints.concat(createSupplementaryPoints(subFeature,options,index))})}(),supplementaryPoints}},934:function(module,exports,__webpack_require__){const constrainFeatureMovement=__webpack_require__(935),Constants=__webpack_require__(918);module.exports=function(features,delta){const constrainedDelta=constrainFeatureMovement(features.map(feature=>feature.toGeoJSON()),delta);features.forEach(feature=>{const currentCoordinates=feature.getCoordinates(),moveCoordinate=coord=>{const point={lng:coord[0]+constrainedDelta.lng,lat:coord[1]+constrainedDelta.lat};return[point.lng,point.lat]},moveRing=ring=>ring.map(coord=>moveCoordinate(coord)),moveMultiPolygon=multi=>multi.map(ring=>moveRing(ring));let nextCoordinates;feature.type===Constants.geojsonTypes.POINT?nextCoordinates=moveCoordinate(currentCoordinates):feature.type===Constants.geojsonTypes.LINE_STRING||feature.type===Constants.geojsonTypes.MULTI_POINT?nextCoordinates=currentCoordinates.map(moveCoordinate):feature.type===Constants.geojsonTypes.POLYGON||feature.type===Constants.geojsonTypes.MULTI_LINE_STRING?nextCoordinates=currentCoordinates.map(moveRing):feature.type===Constants.geojsonTypes.MULTI_POLYGON&&(nextCoordinates=currentCoordinates.map(moveMultiPolygon)),feature.incomingCoords(nextCoordinates)})}},935:function(module,exports,__webpack_require__){const extent=__webpack_require__(962),Constants=__webpack_require__(918),{LAT_MIN:LAT_MIN,LAT_MAX:LAT_MAX,LAT_RENDERED_MIN:LAT_RENDERED_MIN,LAT_RENDERED_MAX:LAT_RENDERED_MAX,LNG_MIN:LNG_MIN,LNG_MAX:LNG_MAX}=Constants;module.exports=function(geojsonFeatures,delta){let northInnerEdge=LAT_MIN,southInnerEdge=LAT_MAX,northOuterEdge=LAT_MIN,southOuterEdge=LAT_MAX,westEdge=LNG_MAX,eastEdge=LNG_MIN;geojsonFeatures.forEach(feature=>{const bounds=extent(feature),featureSouthEdge=bounds[1],featureNorthEdge=bounds[3],featureWestEdge=bounds[0],featureEastEdge=bounds[2];featureSouthEdge>northInnerEdge&&(northInnerEdge=featureSouthEdge),featureNorthEdge<southInnerEdge&&(southInnerEdge=featureNorthEdge),featureNorthEdge>northOuterEdge&&(northOuterEdge=featureNorthEdge),featureSouthEdge<southOuterEdge&&(southOuterEdge=featureSouthEdge),featureWestEdge<westEdge&&(westEdge=featureWestEdge),featureEastEdge>eastEdge&&(eastEdge=featureEastEdge)});const constrainedDelta=delta;return northInnerEdge+constrainedDelta.lat>LAT_RENDERED_MAX&&(constrainedDelta.lat=LAT_RENDERED_MAX-northInnerEdge),northOuterEdge+constrainedDelta.lat>LAT_MAX&&(constrainedDelta.lat=LAT_MAX-northOuterEdge),southInnerEdge+constrainedDelta.lat<LAT_RENDERED_MIN&&(constrainedDelta.lat=LAT_RENDERED_MIN-southInnerEdge),southOuterEdge+constrainedDelta.lat<LAT_MIN&&(constrainedDelta.lat=LAT_MIN-southOuterEdge),westEdge+constrainedDelta.lng<=LNG_MIN&&(constrainedDelta.lng+=360*Math.ceil(Math.abs(constrainedDelta.lng)/360)),eastEdge+constrainedDelta.lng>=LNG_MAX&&(constrainedDelta.lng-=360*Math.ceil(Math.abs(constrainedDelta.lng)/360)),constrainedDelta}},936:function(module,exports){module.exports=function normalize(gj){if(!gj||!gj.type)return null;var type=types[gj.type];if(!type)return null;if("geometry"===type)return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:gj}]};if("feature"===type)return{type:"FeatureCollection",features:[gj]};if("featurecollection"===type)return gj};var types={Point:"geometry",MultiPoint:"geometry",LineString:"geometry",MultiLineString:"geometry",Polygon:"geometry",MultiPolygon:"geometry",GeometryCollection:"geometry",Feature:"feature",FeatureCollection:"featurecollection"}},937:function(module,exports){module.exports=function isEventAtCoordinates(event,coordinates){return!!event.lngLat&&(event.lngLat.lng===coordinates[0]&&event.lngLat.lat===coordinates[1])}},938:function(module,exports,__webpack_require__){const events=__webpack_require__(939),Store=__webpack_require__(951),ui=__webpack_require__(955),Constants=__webpack_require__(918),xtend=__webpack_require__(929);module.exports=function(ctx){let controlContainer=null,mapLoadedInterval=null;const setup={onRemove:function(){return ctx.map.off("load",setup.connect),clearInterval(mapLoadedInterval),setup.removeLayers(),ctx.store.restoreMapConfig(),ctx.ui.removeButtons(),ctx.events.removeEventListeners(),ctx.ui.clearMapClasses(),ctx.map=null,ctx.container=null,ctx.store=null,controlContainer&&controlContainer.parentNode&&controlContainer.parentNode.removeChild(controlContainer),controlContainer=null,this},connect:function(){ctx.map.off("load",setup.connect),clearInterval(mapLoadedInterval),setup.addLayers(),ctx.store.storeMapConfig(),ctx.events.addEventListeners()},onAdd:function(map){{const _fire=map.fire;map.fire=function(type,event){let args=arguments;return 1===_fire.length&&1!==arguments.length&&(args=[xtend({},{type:type},event)]),_fire.apply(map,args)}}return ctx.map=map,ctx.events=events(ctx),ctx.ui=ui(ctx),ctx.container=map.getContainer(),ctx.store=new Store(ctx),controlContainer=ctx.ui.addButtons(),ctx.options.boxSelect&&(map.boxZoom.disable(),map.dragPan.disable(),map.dragPan.enable()),map.loaded()?setup.connect():(map.on("load",setup.connect),mapLoadedInterval=setInterval(()=>{map.loaded()&&setup.connect()},16)),ctx.events.start(),controlContainer},addLayers:function(){ctx.map.addSource(Constants.sources.COLD,{data:{type:Constants.geojsonTypes.FEATURE_COLLECTION,features:[]},type:"geojson"}),ctx.map.addSource(Constants.sources.HOT,{data:{type:Constants.geojsonTypes.FEATURE_COLLECTION,features:[]},type:"geojson"}),ctx.options.styles.forEach(style=>{ctx.map.addLayer(style)}),ctx.store.setDirty(!0),ctx.store.render()},removeLayers:function(){ctx.options.styles.forEach(style=>{ctx.map.getLayer(style.id)&&ctx.map.removeLayer(style.id)}),ctx.map.getSource(Constants.sources.COLD)&&ctx.map.removeSource(Constants.sources.COLD),ctx.map.getSource(Constants.sources.HOT)&&ctx.map.removeSource(Constants.sources.HOT)}};return ctx.setup=setup,setup}},939:function(module,exports,__webpack_require__){const setupModeHandler=__webpack_require__(940),getFeaturesAndSetCursor=__webpack_require__(941),featuresAt=__webpack_require__(920),isClick=__webpack_require__(946),isTap=__webpack_require__(947),Constants=__webpack_require__(918),objectToMode=__webpack_require__(948);module.exports=function(ctx){const modes=Object.keys(ctx.options.modes).reduce((m,k)=>(m[k]=objectToMode(ctx.options.modes[k]),m),{});let mouseDownInfo={},touchStartInfo={};const events={};let currentModeName=null,currentMode=null;events.drag=function(event,isDrag){isDrag({point:event.point,time:(new Date).getTime()})?(ctx.ui.queueMapClasses({mouse:Constants.cursors.DRAG}),currentMode.drag(event)):event.originalEvent.stopPropagation()},events.mousedrag=function(event){events.drag(event,endInfo=>!isClick(mouseDownInfo,endInfo))},events.touchdrag=function(event){events.drag(event,endInfo=>!isTap(touchStartInfo,endInfo))},events.mousemove=function(event){if(1===(void 0!==event.originalEvent.buttons?event.originalEvent.buttons:event.originalEvent.which))return events.mousedrag(event);const target=getFeaturesAndSetCursor(event,ctx);event.featureTarget=target,currentMode.mousemove(event)},events.mousedown=function(event){mouseDownInfo={time:(new Date).getTime(),point:event.point};const target=getFeaturesAndSetCursor(event,ctx);event.featureTarget=target,currentMode.mousedown(event)},events.mouseup=function(event){const target=getFeaturesAndSetCursor(event,ctx);event.featureTarget=target,isClick(mouseDownInfo,{point:event.point,time:(new Date).getTime()})?currentMode.click(event):currentMode.mouseup(event)},events.mouseout=function(event){currentMode.mouseout(event)},events.touchstart=function(event){if(event.originalEvent.preventDefault(),!ctx.options.touchEnabled)return;touchStartInfo={time:(new Date).getTime(),point:event.point};const target=featuresAt.touch(event,null,ctx)[0];event.featureTarget=target,currentMode.touchstart(event)},events.touchmove=function(event){if(event.originalEvent.preventDefault(),ctx.options.touchEnabled)return currentMode.touchmove(event),events.touchdrag(event)},events.touchend=function(event){if(event.originalEvent.preventDefault(),!ctx.options.touchEnabled)return;const target=featuresAt.touch(event,null,ctx)[0];event.featureTarget=target,isTap(touchStartInfo,{time:(new Date).getTime(),point:event.point})?currentMode.tap(event):currentMode.touchend(event)};const isKeyModeValid=code=>!(8===code||46===code||code>=48&&code<=57);function changeMode(modename,nextModeOptions,eventOptions={}){currentMode.stop();const modebuilder=modes[modename];if(void 0===modebuilder)throw new Error(`${modename} is not valid`);currentModeName=modename;const mode=modebuilder(ctx,nextModeOptions);currentMode=setupModeHandler(mode,ctx),eventOptions.silent||ctx.map.fire(Constants.events.MODE_CHANGE,{mode:modename}),ctx.store.setDirty(),ctx.store.render()}events.keydown=function(event){"mapboxgl-canvas"===(event.srcElement||event.target).classList[0]&&(8!==event.keyCode&&46!==event.keyCode||!ctx.options.controls.trash?isKeyModeValid(event.keyCode)?currentMode.keydown(event):49===event.keyCode&&ctx.options.controls.point?changeMode(Constants.modes.DRAW_POINT):50===event.keyCode&&ctx.options.controls.line_string?changeMode(Constants.modes.DRAW_LINE_STRING):51===event.keyCode&&ctx.options.controls.polygon&&changeMode(Constants.modes.DRAW_POLYGON):(event.preventDefault(),currentMode.trash()))},events.keyup=function(event){isKeyModeValid(event.keyCode)&&currentMode.keyup(event)},events.zoomend=function(){ctx.store.changeZoom()},events.data=function(event){if("style"===event.dataType){const{setup:setup,map:map,options:options,store:store}=ctx;options.styles.some(style=>map.getLayer(style.id))||(setup.addLayers(),store.setDirty(),store.render())}};const actionState={trash:!1,combineFeatures:!1,uncombineFeatures:!1};return{start:function(){currentModeName=ctx.options.defaultMode,currentMode=setupModeHandler(modes[currentModeName](ctx),ctx)},changeMode:changeMode,actionable:function actionable(actions){let changed=!1;Object.keys(actions).forEach(action=>{if(void 0===actionState[action])throw new Error("Invalid action type");actionState[action]!==actions[action]&&(changed=!0),actionState[action]=actions[action]}),changed&&ctx.map.fire(Constants.events.ACTIONABLE,{actions:actionState})},currentModeName:function(){return currentModeName},currentModeRender:function(geojson,push){return currentMode.render(geojson,push)},fire:function(name,event){events[name]&&events[name](event)},addEventListeners:function(){ctx.map.on("mousemove",events.mousemove),ctx.map.on("mousedown",events.mousedown),ctx.map.on("mouseup",events.mouseup),ctx.map.on("data",events.data),ctx.map.on("touchmove",events.touchmove),ctx.map.on("touchstart",events.touchstart),ctx.map.on("touchend",events.touchend),ctx.container.addEventListener("mouseout",events.mouseout),ctx.options.keybindings&&(ctx.container.addEventListener("keydown",events.keydown),ctx.container.addEventListener("keyup",events.keyup))},removeEventListeners:function(){ctx.map.off("mousemove",events.mousemove),ctx.map.off("mousedown",events.mousedown),ctx.map.off("mouseup",events.mouseup),ctx.map.off("data",events.data),ctx.map.off("touchmove",events.touchmove),ctx.map.off("touchstart",events.touchstart),ctx.map.off("touchend",events.touchend),ctx.container.removeEventListener("mouseout",events.mouseout),ctx.options.keybindings&&(ctx.container.removeEventListener("keydown",events.keydown),ctx.container.removeEventListener("keyup",events.keyup))},trash:function(options){currentMode.trash(options)},combineFeatures:function(){currentMode.combineFeatures()},uncombineFeatures:function(){currentMode.uncombineFeatures()},getMode:function(){return currentModeName}}}},940:function(module,exports){module.exports=function(mode,DrawContext){const handlers={drag:[],click:[],mousemove:[],mousedown:[],mouseup:[],mouseout:[],keydown:[],keyup:[],touchstart:[],touchmove:[],touchend:[],tap:[]},ctx={on:function(event,selector,fn){if(void 0===handlers[event])throw new Error(`Invalid event type: ${event}`);handlers[event].push({selector:selector,fn:fn})},render:function(id){DrawContext.store.featureChanged(id)}},delegate=function(eventName,event){const handles=handlers[eventName];let iHandle=handles.length;for(;iHandle--;){const handle=handles[iHandle];if(handle.selector(event)){handle.fn.call(ctx,event),DrawContext.store.render(),DrawContext.ui.updateMapClasses();break}}};return mode.start.call(ctx),{render:mode.render,stop:function(){mode.stop&&mode.stop()},trash:function(){mode.trash&&(mode.trash(),DrawContext.store.render())},combineFeatures:function(){mode.combineFeatures&&mode.combineFeatures()},uncombineFeatures:function(){mode.uncombineFeatures&&mode.uncombineFeatures()},drag:function(event){delegate("drag",event)},click:function(event){delegate("click",event)},mousemove:function(event){delegate("mousemove",event)},mousedown:function(event){delegate("mousedown",event)},mouseup:function(event){delegate("mouseup",event)},mouseout:function(event){delegate("mouseout",event)},keydown:function(event){delegate("keydown",event)},keyup:function(event){delegate("keyup",event)},touchstart:function(event){delegate("touchstart",event)},touchmove:function(event){delegate("touchmove",event)},touchend:function(event){delegate("touchend",event)},tap:function(event){delegate("tap",event)}}}},941:function(module,exports,__webpack_require__){const featuresAt=__webpack_require__(920),Constants=__webpack_require__(918);module.exports=function getFeatureAtAndSetCursors(event,ctx){const features=featuresAt.click(event,null,ctx),classes={mouse:Constants.cursors.NONE};return features[0]&&(classes.mouse=features[0].properties.active===Constants.activeStates.ACTIVE?Constants.cursors.MOVE:Constants.cursors.POINTER,classes.feature=features[0].properties.meta),-1!==ctx.events.currentModeName().indexOf("draw")&&(classes.mouse=Constants.cursors.ADD),ctx.ui.queueMapClasses(classes),ctx.ui.updateMapClasses(),features[0]}},942:function(module,exports,__webpack_require__){const area=__webpack_require__(943),Constants=__webpack_require__(918),FEATURE_SORT_RANKS={Point:0,LineString:1,Polygon:2};function comparator(a,b){const score=FEATURE_SORT_RANKS[a.geometry.type]-FEATURE_SORT_RANKS[b.geometry.type];return 0===score&&a.geometry.type===Constants.geojsonTypes.POLYGON?a.area-b.area:score}module.exports=function sortFeatures(features){return features.map(feature=>(feature.geometry.type===Constants.geojsonTypes.POLYGON&&(feature.area=area.geometry({type:Constants.geojsonTypes.FEATURE,property:{},geometry:feature.geometry})),feature)).sort(comparator).map(feature=>(delete feature.area,feature))}},943:function(module,exports,__webpack_require__){var wgs84=__webpack_require__(944);function polygonArea(coords){var area=0;if(coords&&coords.length>0){area+=Math.abs(ringArea(coords[0]));for(var i=1;i<coords.length;i++)area-=Math.abs(ringArea(coords[i]))}return area}function ringArea(coords){var p1,p2,lowerIndex,middleIndex,upperIndex,i,area=0,coordsLength=coords.length;if(coordsLength>2){for(i=0;i<coordsLength;i++)i===coordsLength-2?(lowerIndex=coordsLength-2,middleIndex=coordsLength-1,upperIndex=0):i===coordsLength-1?(lowerIndex=coordsLength-1,middleIndex=0,upperIndex=1):(lowerIndex=i,middleIndex=i+1,upperIndex=i+2),p1=coords[lowerIndex],p2=coords[middleIndex],area+=(rad(coords[upperIndex][0])-rad(p1[0]))*Math.sin(rad(p2[1]));area=area*wgs84.RADIUS*wgs84.RADIUS/2}return area}function rad(_){return _*Math.PI/180}module.exports.geometry=function geometry(_){var i,area=0;switch(_.type){case"Polygon":return polygonArea(_.coordinates);case"MultiPolygon":for(i=0;i<_.coordinates.length;i++)area+=polygonArea(_.coordinates[i]);return area;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0;case"GeometryCollection":for(i=0;i<_.geometries.length;i++)area+=geometry(_.geometries[i]);return area}},module.exports.ring=ringArea},944:function(module,exports){module.exports.RADIUS=6378137,module.exports.FLATTENING=1/298.257223563,module.exports.POLAR_RADIUS=6356752.3142},945:function(module,exports){module.exports=function mapEventToBoundingBox(mapEvent,buffer=0){return[[mapEvent.point.x-buffer,mapEvent.point.y-buffer],[mapEvent.point.x+buffer,mapEvent.point.y+buffer]]}},946:function(module,exports,__webpack_require__){const euclideanDistance=__webpack_require__(931);module.exports=function isClick(start,end,options={}){const fineTolerance=null!=options.fineTolerance?options.fineTolerance:4,grossTolerance=null!=options.grossTolerance?options.grossTolerance:12,interval=null!=options.interval?options.interval:500;start.point=start.point||end.point,start.time=start.time||end.time;const moveDistance=euclideanDistance(start.point,end.point);return moveDistance<fineTolerance||moveDistance<grossTolerance&&end.time-start.time<interval}},947:function(module,exports,__webpack_require__){const euclideanDistance=__webpack_require__(931);module.exports=function isTap(start,end,options={}){const tolerance=null!=options.tolerance?options.tolerance:25,interval=null!=options.interval?options.interval:250;return start.point=start.point||end.point,start.time=start.time||end.time,euclideanDistance(start.point,end.point)<tolerance&&end.time-start.time<interval}},948:function(module,exports,__webpack_require__){const ModeInterface=__webpack_require__(949),eventMapper={drag:"onDrag",click:"onClick",mousemove:"onMouseMove",mousedown:"onMouseDown",mouseup:"onMouseUp",mouseout:"onMouseOut",keyup:"onKeyUp",keydown:"onKeyDown",touchstart:"onTouchStart",touchmove:"onTouchMove",touchend:"onTouchEnd",tap:"onTap"},eventKeys=Object.keys(eventMapper);module.exports=function(modeObject){const modeObjectKeys=Object.keys(modeObject);return function(ctx,startOpts={}){let state={};const mode=modeObjectKeys.reduce((m,k)=>(m[k]=modeObject[k],m),new ModeInterface(ctx));return{start:function(){state=mode.onSetup(startOpts),eventKeys.forEach(key=>{const modeHandler=eventMapper[key];let selector=()=>!1;modeObject[modeHandler]&&(selector=()=>!0),this.on(key,selector,function wrapper(eh){return function(e){mode[eh](state,e)}}(modeHandler))})},stop:function(){mode.onStop(state)},trash:function(){mode.onTrash(state)},combineFeatures:function(){mode.onCombineFeatures(state)},uncombineFeatures:function(){mode.onUncombineFeatures(state)},render:function(geojson,push){mode.toDisplayFeatures(state,geojson,push)}}}}},949:function(module,exports,__webpack_require__){const ModeInterface=module.exports=__webpack_require__(950);ModeInterface.prototype.onSetup=function(){},ModeInterface.prototype.onDrag=function(){},ModeInterface.prototype.onClick=function(){},ModeInterface.prototype.onMouseMove=function(){},ModeInterface.prototype.onMouseDown=function(){},ModeInterface.prototype.onMouseUp=function(){},ModeInterface.prototype.onMouseOut=function(){},ModeInterface.prototype.onKeyUp=function(){},ModeInterface.prototype.onKeyDown=function(){},ModeInterface.prototype.onTouchStart=function(){},ModeInterface.prototype.onTouchMove=function(){},ModeInterface.prototype.onTouchEnd=function(){},ModeInterface.prototype.onTap=function(){},ModeInterface.prototype.onStop=function(){},ModeInterface.prototype.onTrash=function(){},ModeInterface.prototype.onCombineFeature=function(){},ModeInterface.prototype.onUncombineFeature=function(){},ModeInterface.prototype.toDisplayFeatures=function(){throw new Error("You must overwrite toDisplayFeatures")}},950:function(module,exports,__webpack_require__){const Constants=__webpack_require__(918),featuresAt=__webpack_require__(920),Point=__webpack_require__(925),LineString=__webpack_require__(927),Polygon=__webpack_require__(928),MultiFeature=__webpack_require__(923),ModeInterface=module.exports=function(ctx){this.map=ctx.map,this.drawConfig=JSON.parse(JSON.stringify(ctx.options||{})),this._ctx=ctx};ModeInterface.prototype.setSelected=function(features){return this._ctx.store.setSelected(features)},ModeInterface.prototype.setSelectedCoordinates=function(coords){this._ctx.store.setSelectedCoordinates(coords),coords.reduce((m,c)=>(void 0===m[c.feature_id]&&(m[c.feature_id]=!0,this._ctx.store.get(c.feature_id).changed()),m),{})},ModeInterface.prototype.getSelected=function(){return this._ctx.store.getSelected()},ModeInterface.prototype.getSelectedIds=function(){return this._ctx.store.getSelectedIds()},ModeInterface.prototype.isSelected=function(id){return this._ctx.store.isSelected(id)},ModeInterface.prototype.getFeature=function(id){return this._ctx.store.get(id)},ModeInterface.prototype.select=function(id){return this._ctx.store.select(id)},ModeInterface.prototype.deselect=function(id){return this._ctx.store.deselect(id)},ModeInterface.prototype.deleteFeature=function(id,opts={}){return this._ctx.store.delete(id,opts)},ModeInterface.prototype.addFeature=function(feature){return this._ctx.store.add(feature)},ModeInterface.prototype.clearSelectedFeatures=function(){return this._ctx.store.clearSelected()},ModeInterface.prototype.clearSelectedCoordinates=function(){return this._ctx.store.clearSelectedCoordinates()},ModeInterface.prototype.setActionableState=function(actions={}){const newSet={trash:actions.trash||!1,combineFeatures:actions.combineFeatures||!1,uncombineFeatures:actions.uncombineFeatures||!1};return this._ctx.events.actionable(newSet)},ModeInterface.prototype.changeMode=function(mode,opts={},eventOpts={}){return this._ctx.events.changeMode(mode,opts,eventOpts)},ModeInterface.prototype.updateUIClasses=function(opts){return this._ctx.ui.queueMapClasses(opts)},ModeInterface.prototype.activateUIButton=function(name){return this._ctx.ui.setActiveButton(name)},ModeInterface.prototype.featuresAt=function(event,bbox,bufferType="click"){if("click"!==bufferType&&"touch"!==bufferType)throw new Error("invalid buffer type");return featuresAt[bufferType](event,bbox,this._ctx)},ModeInterface.prototype.newFeature=function(geojson){const type=geojson.geometry.type;return type===Constants.geojsonTypes.POINT?new Point(this._ctx,geojson):type===Constants.geojsonTypes.LINE_STRING?new LineString(this._ctx,geojson):type===Constants.geojsonTypes.POLYGON?new Polygon(this._ctx,geojson):new MultiFeature(this._ctx,geojson)},ModeInterface.prototype.isInstanceOf=function(type,feature){if(type===Constants.geojsonTypes.POINT)return feature instanceof Point;if(type===Constants.geojsonTypes.LINE_STRING)return feature instanceof LineString;if(type===Constants.geojsonTypes.POLYGON)return feature instanceof Polygon;if("MultiFeature"===type)return feature instanceof MultiFeature;throw new Error(`Unknown feature class: ${type}`)},ModeInterface.prototype.doRender=function(id){return this._ctx.store.featureChanged(id)}},951:function(module,exports,__webpack_require__){const throttle=__webpack_require__(952),toDenseArray=__webpack_require__(953),StringSet=__webpack_require__(921),render=__webpack_require__(954),interactions=__webpack_require__(918).interactions,Store=module.exports=function(ctx){this._features={},this._featureIds=new StringSet,this._selectedFeatureIds=new StringSet,this._selectedCoordinates=[],this._changedFeatureIds=new StringSet,this._deletedFeaturesToEmit=[],this._emitSelectionChange=!1,this._mapInitialConfig={},this.ctx=ctx,this.sources={hot:[],cold:[]},this.render=throttle(render,16,this),this.isDirty=!1};function refreshSelectedCoordinates(options){const newSelectedCoordinates=this._selectedCoordinates.filter(point=>this._selectedFeatureIds.has(point.feature_id));this._selectedCoordinates.length===newSelectedCoordinates.length||options.silent||(this._emitSelectionChange=!0),this._selectedCoordinates=newSelectedCoordinates}Store.prototype.createRenderBatch=function(){const holdRender=this.render;let numRenders=0;return this.render=function(){numRenders++},()=>{this.render=holdRender,numRenders>0&&this.render()}},Store.prototype.setDirty=function(){return this.isDirty=!0,this},Store.prototype.featureChanged=function(featureId){return this._changedFeatureIds.add(featureId),this},Store.prototype.getChangedIds=function(){return this._changedFeatureIds.values()},Store.prototype.clearChangedIds=function(){return this._changedFeatureIds.clear(),this},Store.prototype.getAllIds=function(){return this._featureIds.values()},Store.prototype.add=function(feature){return this.featureChanged(feature.id),this._features[feature.id]=feature,this._featureIds.add(feature.id),this},Store.prototype.delete=function(featureIds,options={}){return toDenseArray(featureIds).forEach(id=>{this._featureIds.has(id)&&(this._featureIds.delete(id),this._selectedFeatureIds.delete(id),options.silent||-1===this._deletedFeaturesToEmit.indexOf(this._features[id])&&this._deletedFeaturesToEmit.push(this._features[id]),delete this._features[id],this.isDirty=!0)}),refreshSelectedCoordinates.call(this,options),this},Store.prototype.get=function(id){return this._features[id]},Store.prototype.getAll=function(){return Object.keys(this._features).map(id=>this._features[id])},Store.prototype.select=function(featureIds,options={}){return toDenseArray(featureIds).forEach(id=>{this._selectedFeatureIds.has(id)||(this._selectedFeatureIds.add(id),this._changedFeatureIds.add(id),options.silent||(this._emitSelectionChange=!0))}),this},Store.prototype.deselect=function(featureIds,options={}){return toDenseArray(featureIds).forEach(id=>{this._selectedFeatureIds.has(id)&&(this._selectedFeatureIds.delete(id),this._changedFeatureIds.add(id),options.silent||(this._emitSelectionChange=!0))}),refreshSelectedCoordinates.call(this,options),this},Store.prototype.clearSelected=function(options={}){return this.deselect(this._selectedFeatureIds.values(),{silent:options.silent}),this},Store.prototype.setSelected=function(featureIds,options={}){return featureIds=toDenseArray(featureIds),this.deselect(this._selectedFeatureIds.values().filter(id=>-1===featureIds.indexOf(id)),{silent:options.silent}),this.select(featureIds.filter(id=>!this._selectedFeatureIds.has(id)),{silent:options.silent}),this},Store.prototype.setSelectedCoordinates=function(coordinates){return this._selectedCoordinates=coordinates,this._emitSelectionChange=!0,this},Store.prototype.clearSelectedCoordinates=function(){return this._selectedCoordinates=[],this._emitSelectionChange=!0,this},Store.prototype.getSelectedIds=function(){return this._selectedFeatureIds.values()},Store.prototype.getSelected=function(){return this._selectedFeatureIds.values().map(id=>this.get(id))},Store.prototype.getSelectedCoordinates=function(){return this._selectedCoordinates.map(coordinate=>({coordinates:this.get(coordinate.feature_id).getCoordinate(coordinate.coord_path)}))},Store.prototype.isSelected=function(featureId){return this._selectedFeatureIds.has(featureId)},Store.prototype.setFeatureProperty=function(featureId,property,value){this.get(featureId).setProperty(property,value),this.featureChanged(featureId)},Store.prototype.storeMapConfig=function(){interactions.forEach(interaction=>{this.ctx.map[interaction]&&(this._mapInitialConfig[interaction]=this.ctx.map[interaction].isEnabled())})},Store.prototype.restoreMapConfig=function(){Object.keys(this._mapInitialConfig).forEach(key=>{this._mapInitialConfig[key]?this.ctx.map[key].enable():this.ctx.map[key].disable()})},Store.prototype.getInitialConfigValue=function(interaction){return void 0===this._mapInitialConfig[interaction]||this._mapInitialConfig[interaction]}},952:function(module,exports){module.exports=function throttle(fn,time,context){let lock,args;function later(){lock=!1,args&&(wrapperFn.apply(context,args),args=!1)}function wrapperFn(){lock?args=arguments:(lock=!0,fn.apply(context,arguments),setTimeout(later,time))}return wrapperFn}},953:function(module,exports){module.exports=function toDenseArray(x){return[].concat(x).filter(y=>void 0!==y)}},954:function(module,exports,__webpack_require__){const Constants=__webpack_require__(918);module.exports=function render(){const store=this;if(!(store.ctx.map&&void 0!==store.ctx.map.getSource(Constants.sources.HOT)))return cleanup();const mode=store.ctx.events.currentModeName();store.ctx.ui.queueMapClasses({mode:mode});let newHotIds=[],newColdIds=[];store.isDirty?newColdIds=store.getAllIds():(newHotIds=store.getChangedIds().filter(id=>void 0!==store.get(id)),newColdIds=store.sources.hot.filter(geojson=>geojson.properties.id&&-1===newHotIds.indexOf(geojson.properties.id)&&void 0!==store.get(geojson.properties.id)).map(geojson=>geojson.properties.id)),store.sources.hot=[];const lastColdCount=store.sources.cold.length;store.sources.cold=store.isDirty?[]:store.sources.cold.filter(geojson=>{const id=geojson.properties.id||geojson.properties.parent;return-1===newHotIds.indexOf(id)});const coldChanged=lastColdCount!==store.sources.cold.length||newColdIds.length>0;function renderFeature(id,source){const featureInternal=store.get(id).internal(mode);store.ctx.events.currentModeRender(featureInternal,geojson=>{store.sources[source].push(geojson)})}if(newHotIds.forEach(id=>renderFeature(id,"hot")),newColdIds.forEach(id=>renderFeature(id,"cold")),coldChanged&&store.ctx.map.getSource(Constants.sources.COLD).setData({type:Constants.geojsonTypes.FEATURE_COLLECTION,features:store.sources.cold}),store.ctx.map.getSource(Constants.sources.HOT).setData({type:Constants.geojsonTypes.FEATURE_COLLECTION,features:store.sources.hot}),store._emitSelectionChange&&(store.ctx.map.fire(Constants.events.SELECTION_CHANGE,{features:store.getSelected().map(feature=>feature.toGeoJSON()),points:store.getSelectedCoordinates().map(coordinate=>({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.POINT,coordinates:coordinate.coordinates}}))}),store._emitSelectionChange=!1),store._deletedFeaturesToEmit.length){const geojsonToEmit=store._deletedFeaturesToEmit.map(feature=>feature.toGeoJSON());store._deletedFeaturesToEmit=[],store.ctx.map.fire(Constants.events.DELETE,{features:geojsonToEmit})}function cleanup(){store.isDirty=!1,store.clearChangedIds()}cleanup(),store.ctx.map.fire(Constants.events.RENDER,{})}},955:function(module,exports,__webpack_require__){const xtend=__webpack_require__(929),Constants=__webpack_require__(918),classTypes=["mode","feature","mouse"];module.exports=function(ctx){const buttonElements={};let activeButton=null,currentMapClasses={mode:null,feature:null,mouse:null},nextMapClasses={mode:null,feature:null,mouse:null};function queueMapClasses(options){nextMapClasses=xtend(nextMapClasses,options)}function updateMapClasses(){if(!ctx.container)return;const classesToRemove=[],classesToAdd=[];classTypes.forEach(type=>{nextMapClasses[type]!==currentMapClasses[type]&&(classesToRemove.push(`${type}-${currentMapClasses[type]}`),null!==nextMapClasses[type]&&classesToAdd.push(`${type}-${nextMapClasses[type]}`))}),classesToRemove.length>0&&ctx.container.classList.remove.apply(ctx.container.classList,classesToRemove),classesToAdd.length>0&&ctx.container.classList.add.apply(ctx.container.classList,classesToAdd),currentMapClasses=xtend(currentMapClasses,nextMapClasses)}function createControlButton(id,options={}){const button=document.createElement("button");return button.className=`${Constants.classes.CONTROL_BUTTON} ${options.className}`,button.setAttribute("title",options.title),options.container.appendChild(button),button.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),e.target!==activeButton?(setActiveButton(id),options.onActivate()):deactivateButtons()},!0),button}function deactivateButtons(){activeButton&&(activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON),activeButton=null)}function setActiveButton(id){deactivateButtons();const button=buttonElements[id];button&&button&&"trash"!==id&&(button.classList.add(Constants.classes.ACTIVE_BUTTON),activeButton=button)}return{setActiveButton:setActiveButton,queueMapClasses:queueMapClasses,updateMapClasses:updateMapClasses,clearMapClasses:function clearMapClasses(){queueMapClasses({mode:null,feature:null,mouse:null}),updateMapClasses()},addButtons:function addButtons(){const controls=ctx.options.controls,controlGroup=document.createElement("div");return controlGroup.className=`${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`,controls?(controls[Constants.types.LINE]&&(buttonElements[Constants.types.LINE]=createControlButton(Constants.types.LINE,{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_LINE,title:`LineString tool ${ctx.options.keybindings?"(l)":""}`,onActivate:()=>ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING)})),controls[Constants.types.POLYGON]&&(buttonElements[Constants.types.POLYGON]=createControlButton(Constants.types.POLYGON,{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_POLYGON,title:`Polygon tool ${ctx.options.keybindings?"(p)":""}`,onActivate:()=>ctx.events.changeMode(Constants.modes.DRAW_POLYGON)})),controls[Constants.types.POINT]&&(buttonElements[Constants.types.POINT]=createControlButton(Constants.types.POINT,{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_POINT,title:`Marker tool ${ctx.options.keybindings?"(m)":""}`,onActivate:()=>ctx.events.changeMode(Constants.modes.DRAW_POINT)})),controls.trash&&(buttonElements.trash=createControlButton("trash",{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_TRASH,title:"Delete",onActivate:()=>{ctx.events.trash()}})),controls.combine_features&&(buttonElements.combine_features=createControlButton("combineFeatures",{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,title:"Combine",onActivate:()=>{ctx.events.combineFeatures()}})),controls.uncombine_features&&(buttonElements.uncombine_features=createControlButton("uncombineFeatures",{container:controlGroup,className:Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,title:"Uncombine",onActivate:()=>{ctx.events.uncombineFeatures()}})),controlGroup):controlGroup},removeButtons:function removeButtons(){Object.keys(buttonElements).forEach(buttonId=>{const button=buttonElements[buttonId];button.parentNode&&button.parentNode.removeChild(button),delete buttonElements[buttonId]})}}}},956:function(module,exports,__webpack_require__){const xtend=__webpack_require__(929),Constants=__webpack_require__(918),defaultOptions={defaultMode:Constants.modes.SIMPLE_SELECT,keybindings:!0,touchEnabled:!0,clickBuffer:2,touchBuffer:25,boxSelect:!0,displayControlsDefault:!0,styles:__webpack_require__(957),modes:__webpack_require__(932),controls:{},userProperties:!1},showControls={point:!0,line_string:!0,polygon:!0,trash:!0,combine_features:!0,uncombine_features:!0},hideControls={point:!1,line_string:!1,polygon:!1,trash:!1,combine_features:!1,uncombine_features:!1};function addSources(styles,sourceBucket){return styles.map(style=>style.source?style:xtend(style,{id:`${style.id}.${sourceBucket}`,source:"hot"===sourceBucket?Constants.sources.HOT:Constants.sources.COLD}))}module.exports=function(options={}){let withDefaults=xtend(options);return options.controls||(withDefaults.controls={}),!1===options.displayControlsDefault?withDefaults.controls=xtend(hideControls,options.controls):withDefaults.controls=xtend(showControls,options.controls),withDefaults=xtend(defaultOptions,withDefaults),withDefaults.styles=addSources(withDefaults.styles,"cold").concat(addSources(withDefaults.styles,"hot")),withDefaults}},957:function(module,exports){module.exports=[{id:"gl-draw-polygon-fill-inactive",type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],paint:{"fill-color":"#3bb2d0","fill-outline-color":"#3bb2d0","fill-opacity":.1}},{id:"gl-draw-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.1}},{id:"gl-draw-polygon-midpoint",type:"circle",filter:["all",["==","$type","Point"],["==","meta","midpoint"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-stroke-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-polygon-stroke-active",type:"line",filter:["all",["==","active","true"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-line-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-line-active",type:"line",filter:["all",["==","$type","LineString"],["==","active","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-stroke-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-color":"#fff"}},{id:"gl-draw-polygon-and-line-vertex-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-point-point-stroke-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-opacity":1,"circle-color":"#fff"}},{id:"gl-draw-point-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#3bb2d0"}},{id:"gl-draw-point-stroke-active",type:"circle",filter:["all",["==","$type","Point"],["==","active","true"],["!=","meta","midpoint"]],paint:{"circle-radius":7,"circle-color":"#fff"}},{id:"gl-draw-point-active",type:"circle",filter:["all",["==","$type","Point"],["!=","meta","midpoint"],["==","active","true"]],paint:{"circle-radius":5,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-fill-static",type:"fill",filter:["all",["==","mode","static"],["==","$type","Polygon"]],paint:{"fill-color":"#404040","fill-outline-color":"#404040","fill-opacity":.1}},{id:"gl-draw-polygon-stroke-static",type:"line",filter:["all",["==","mode","static"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","mode","static"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-point-static",type:"circle",filter:["all",["==","mode","static"],["==","$type","Point"]],paint:{"circle-radius":5,"circle-color":"#404040"}}]},958:function(module,exports,__webpack_require__){const CommonSelectors=__webpack_require__(919),mouseEventPoint=__webpack_require__(959),createSupplementaryPoints=__webpack_require__(933),StringSet=__webpack_require__(921),doubleClickZoom=__webpack_require__(924),moveFeatures=__webpack_require__(934),Constants=__webpack_require__(918),SimpleSelect={onSetup:function(opts){const state={dragMoveLocation:null,boxSelectStartLocation:null,boxSelectElement:void 0,boxSelecting:!1,canBoxSelect:!1,dragMoveing:!1,canDragMove:!1,initiallySelectedFeatureIds:opts.featureIds||[]};return this.setSelected(state.initiallySelectedFeatureIds.filter(id=>void 0!==this.getFeature(id))),this.fireActionable(),this.setActionableState({combineFeatures:!0,uncombineFeatures:!0,trash:!0}),state},fireUpdate:function(){this.map.fire(Constants.events.UPDATE,{action:Constants.updateActions.MOVE,features:this.getSelected().map(f=>f.toGeoJSON())})},fireActionable:function(){const selectedFeatures=this.getSelected(),multiFeatures=selectedFeatures.filter(feature=>this.isInstanceOf("MultiFeature",feature));let combineFeatures=!1;if(selectedFeatures.length>1){combineFeatures=!0;const featureType=selectedFeatures[0].type.replace("Multi","");selectedFeatures.forEach(feature=>{feature.type.replace("Multi","")!==featureType&&(combineFeatures=!1)})}const uncombineFeatures=multiFeatures.length>0,trash=selectedFeatures.length>0;this.setActionableState({combineFeatures:combineFeatures,uncombineFeatures:uncombineFeatures,trash:trash})},getUniqueIds:function(allFeatures){if(!allFeatures.length)return[];return allFeatures.map(s=>s.properties.id).filter(id=>void 0!==id).reduce((memo,id)=>(memo.add(id),memo),new StringSet).values()},stopExtendedInteractions:function(state){state.boxSelectElement&&(state.boxSelectElement.parentNode&&state.boxSelectElement.parentNode.removeChild(state.boxSelectElement),state.boxSelectElement=null),this.map.dragPan.enable(),state.boxSelecting=!1,state.canBoxSelect=!1,state.dragMoving=!1,state.canDragMove=!1},onStop:function(){doubleClickZoom.enable(this)},onMouseMove:function(state){return this.stopExtendedInteractions(state)},onMouseOut:function(state){if(state.dragMoving)return this.fireUpdate()}};SimpleSelect.onTap=SimpleSelect.onClick=function(state,e){return CommonSelectors.noTarget(e)?this.clickAnywhere(state,e):CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)?this.clickOnVertex(state,e):CommonSelectors.isFeature(e)?this.clickOnFeature(state,e):void 0},SimpleSelect.clickAnywhere=function(state){const wasSelected=this.getSelectedIds();wasSelected.length&&(this.clearSelectedFeatures(),wasSelected.forEach(id=>this.doRender(id))),doubleClickZoom.enable(this),this.stopExtendedInteractions(state)},SimpleSelect.clickOnVertex=function(state,e){this.changeMode(Constants.modes.DIRECT_SELECT,{featureId:e.featureTarget.properties.parent,coordPath:e.featureTarget.properties.coord_path,startPos:e.lngLat}),this.updateUIClasses({mouse:Constants.cursors.MOVE})},SimpleSelect.startOnActiveFeature=function(state,e){this.stopExtendedInteractions(state),this.map.dragPan.disable(),this.doRender(e.featureTarget.properties.id),state.canDragMove=!0,state.dragMoveLocation=e.lngLat},SimpleSelect.clickOnFeature=function(state,e){doubleClickZoom.disable(this),this.stopExtendedInteractions(state);const isShiftClick=CommonSelectors.isShiftDown(e),selectedFeatureIds=this.getSelectedIds(),featureId=e.featureTarget.properties.id,isFeatureSelected=this.isSelected(featureId);if(!isShiftClick&&isFeatureSelected&&this.getFeature(featureId).type!==Constants.geojsonTypes.POINT)return this.changeMode(Constants.modes.DIRECT_SELECT,{featureId:featureId});isFeatureSelected&&isShiftClick?(this.deselect(featureId),this.updateUIClasses({mouse:Constants.cursors.POINTER}),1===selectedFeatureIds.length&&doubleClickZoom.enable(this)):!isFeatureSelected&&isShiftClick?(this.select(featureId),this.updateUIClasses({mouse:Constants.cursors.MOVE})):isFeatureSelected||isShiftClick||(selectedFeatureIds.forEach(id=>this.doRender(id)),this.setSelected(featureId),this.updateUIClasses({mouse:Constants.cursors.MOVE})),this.doRender(featureId)},SimpleSelect.onMouseDown=function(state,e){return CommonSelectors.isActiveFeature(e)?this.startOnActiveFeature(state,e):this.drawConfig.boxSelect&&CommonSelectors.isShiftMousedown(e)?this.startBoxSelect(state,e):void 0},SimpleSelect.startBoxSelect=function(state,e){this.stopExtendedInteractions(state),this.map.dragPan.disable(),state.boxSelectStartLocation=mouseEventPoint(e.originalEvent,this.map.getContainer()),state.canBoxSelect=!0},SimpleSelect.onTouchStart=function(state,e){if(CommonSelectors.isActiveFeature(e))return this.startOnActiveFeature(state,e)},SimpleSelect.onDrag=function(state,e){return state.canDragMove?this.dragMove(state,e):this.drawConfig.boxSelect&&state.canBoxSelect?this.whileBoxSelect(state,e):void 0},SimpleSelect.whileBoxSelect=function(state,e){state.boxSelecting=!0,this.updateUIClasses({mouse:Constants.cursors.ADD}),state.boxSelectElement||(state.boxSelectElement=document.createElement("div"),state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT),this.map.getContainer().appendChild(state.boxSelectElement));const current=mouseEventPoint(e.originalEvent,this.map.getContainer()),minX=Math.min(state.boxSelectStartLocation.x,current.x),maxX=Math.max(state.boxSelectStartLocation.x,current.x),minY=Math.min(state.boxSelectStartLocation.y,current.y),maxY=Math.max(state.boxSelectStartLocation.y,current.y),translateValue=`translate(${minX}px, ${minY}px)`;state.boxSelectElement.style.transform=translateValue,state.boxSelectElement.style.WebkitTransform=translateValue,state.boxSelectElement.style.width=`${maxX-minX}px`,state.boxSelectElement.style.height=`${maxY-minY}px`},SimpleSelect.dragMove=function(state,e){state.dragMoving=!0,e.originalEvent.stopPropagation();const delta={lng:e.lngLat.lng-state.dragMoveLocation.lng,lat:e.lngLat.lat-state.dragMoveLocation.lat};moveFeatures(this.getSelected(),delta),state.dragMoveLocation=e.lngLat},SimpleSelect.onMouseUp=function(state,e){if(state.dragMoving)this.fireUpdate();else if(state.boxSelecting){const bbox=[state.boxSelectStartLocation,mouseEventPoint(e.originalEvent,this.map.getContainer())],featuresInBox=this.featuresAt(null,bbox,"click"),idsToSelect=this.getUniqueIds(featuresInBox).filter(id=>!this.isSelected(id));idsToSelect.length&&(this.select(idsToSelect),idsToSelect.forEach(id=>this.doRender(id)),this.updateUIClasses({mouse:Constants.cursors.MOVE}))}this.stopExtendedInteractions(state)},SimpleSelect.toDisplayFeatures=function(state,geojson,display){geojson.properties.active=this.isSelected(geojson.properties.id)?Constants.activeStates.ACTIVE:Constants.activeStates.INACTIVE,display(geojson),this.fireActionable(),geojson.properties.active===Constants.activeStates.ACTIVE&&geojson.geometry.type!==Constants.geojsonTypes.POINT&&createSupplementaryPoints(geojson).forEach(display)},SimpleSelect.onTrash=function(){this.deleteFeature(this.getSelectedIds()),this.fireActionable()},SimpleSelect.onCombineFeatures=function(){const selectedFeatures=this.getSelected();if(0===selectedFeatures.length||selectedFeatures.length<2)return;const coordinates=[],featuresCombined=[],featureType=selectedFeatures[0].type.replace("Multi","");for(let i=0;i<selectedFeatures.length;i++){const feature=selectedFeatures[i];if(feature.type.replace("Multi","")!==featureType)return;feature.type.includes("Multi")?feature.getCoordinates().forEach(subcoords=>{coordinates.push(subcoords)}):coordinates.push(feature.getCoordinates()),featuresCombined.push(feature.toGeoJSON())}if(featuresCombined.length>1){const multiFeature=this.newFeature({type:Constants.geojsonTypes.FEATURE,properties:featuresCombined[0].properties,geometry:{type:`Multi${featureType}`,coordinates:coordinates}});this.addFeature(multiFeature),this.deleteFeature(this.getSelectedIds(),{silent:!0}),this.setSelected([multiFeature.id]),this.map.fire(Constants.events.COMBINE_FEATURES,{createdFeatures:[multiFeature.toGeoJSON()],deletedFeatures:featuresCombined})}this.fireActionable()},SimpleSelect.onUncombineFeatures=function(){const selectedFeatures=this.getSelected();if(0===selectedFeatures.length)return;const createdFeatures=[],featuresUncombined=[];for(let i=0;i<selectedFeatures.length;i++){const feature=selectedFeatures[i];this.isInstanceOf("MultiFeature",feature)&&(feature.getFeatures().forEach(subFeature=>{this.addFeature(subFeature),subFeature.properties=feature.properties,createdFeatures.push(subFeature.toGeoJSON()),this.select([subFeature.id])}),this.deleteFeature(feature.id,{silent:!0}),featuresUncombined.push(feature.toGeoJSON()))}createdFeatures.length>1&&this.map.fire(Constants.events.UNCOMBINE_FEATURES,{createdFeatures:createdFeatures,deletedFeatures:featuresUncombined}),this.fireActionable()},module.exports=SimpleSelect},959:function(module,exports,__webpack_require__){const Point=__webpack_require__(960);module.exports=function mouseEventPoint(mouseEvent,container){const rect=container.getBoundingClientRect();return new Point(mouseEvent.clientX-rect.left-(container.clientLeft||0),mouseEvent.clientY-rect.top-(container.clientTop||0))}},960:function(module,exports,__webpack_require__){"use strict";function Point(x,y){this.x=x,this.y=y}module.exports=Point,Point.prototype={clone:function(){return new Point(this.x,this.y)},add:function(p){return this.clone()._add(p)},sub:function(p){return this.clone()._sub(p)},multByPoint:function(p){return this.clone()._multByPoint(p)},divByPoint:function(p){return this.clone()._divByPoint(p)},mult:function(k){return this.clone()._mult(k)},div:function(k){return this.clone()._div(k)},rotate:function(a){return this.clone()._rotate(a)},rotateAround:function(a,p){return this.clone()._rotateAround(a,p)},matMult:function(m){return this.clone()._matMult(m)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(other){return this.x===other.x&&this.y===other.y},dist:function(p){return Math.sqrt(this.distSqr(p))},distSqr:function(p){var dx=p.x-this.x,dy=p.y-this.y;return dx*dx+dy*dy},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(b){return Math.atan2(this.y-b.y,this.x-b.x)},angleWith:function(b){return this.angleWithSep(b.x,b.y)},angleWithSep:function(x,y){return Math.atan2(this.x*y-this.y*x,this.x*x+this.y*y)},_matMult:function(m){var x=m[0]*this.x+m[1]*this.y,y=m[2]*this.x+m[3]*this.y;return this.x=x,this.y=y,this},_add:function(p){return this.x+=p.x,this.y+=p.y,this},_sub:function(p){return this.x-=p.x,this.y-=p.y,this},_mult:function(k){return this.x*=k,this.y*=k,this},_div:function(k){return this.x/=k,this.y/=k,this},_multByPoint:function(p){return this.x*=p.x,this.y*=p.y,this},_divByPoint:function(p){return this.x/=p.x,this.y/=p.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var y=this.y;return this.y=this.x,this.x=-y,this},_rotate:function(angle){var cos=Math.cos(angle),sin=Math.sin(angle),x=cos*this.x-sin*this.y,y=sin*this.x+cos*this.y;return this.x=x,this.y=y,this},_rotateAround:function(angle,p){var cos=Math.cos(angle),sin=Math.sin(angle),x=p.x+cos*(this.x-p.x)-sin*(this.y-p.y),y=p.y+sin*(this.x-p.x)+cos*(this.y-p.y);return this.x=x,this.y=y,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},Point.convert=function(a){return a instanceof Point?a:Array.isArray(a)?new Point(a[0],a[1]):a}},961:function(module,exports,__webpack_require__){const Constants=__webpack_require__(918);module.exports=function(parent,startVertex,endVertex,map){const startCoord=startVertex.geometry.coordinates,endCoord=endVertex.geometry.coordinates;if(startCoord[1]>Constants.LAT_RENDERED_MAX||startCoord[1]<Constants.LAT_RENDERED_MIN||endCoord[1]>Constants.LAT_RENDERED_MAX||endCoord[1]<Constants.LAT_RENDERED_MIN)return null;const ptA=map.project([startCoord[0],startCoord[1]]),ptB=map.project([endCoord[0],endCoord[1]]),mid=map.unproject([(ptA.x+ptB.x)/2,(ptA.y+ptB.y)/2]);return{type:Constants.geojsonTypes.FEATURE,properties:{meta:Constants.meta.MIDPOINT,parent:parent,lng:mid.lng,lat:mid.lat,coord_path:endVertex.properties.coord_path},geometry:{type:Constants.geojsonTypes.POINT,coordinates:[mid.lng,mid.lat]}}}},962:function(module,exports,__webpack_require__){var geojsonCoords=__webpack_require__(963),traverse=__webpack_require__(966),extent=__webpack_require__(967),geojsonTypesByDataAttributes={features:["FeatureCollection"],coordinates:["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],geometry:["Feature"],geometries:["GeometryCollection"]},dataAttributes=Object.keys(geojsonTypesByDataAttributes);function getExtent(_){for(var ext=extent(),coords=geojsonCoords(_),i=0;i<coords.length;i++)ext.include(coords[i]);return ext}module.exports=function(_){return getExtent(_).bbox()},module.exports.polygon=function(_){return getExtent(_).polygon()},module.exports.bboxify=function(_){return traverse(_).map((function(value){value&&(dataAttributes.some((function(attribute){return!!value[attribute]&&-1!==geojsonTypesByDataAttributes[attribute].indexOf(value.type)}))&&(value.bbox=getExtent(value).bbox(),this.update(value)))}))}},963:function(module,exports,__webpack_require__){var geojsonNormalize=__webpack_require__(936),geojsonFlatten=__webpack_require__(964),flatten=__webpack_require__(965);module.exports=function(_){if(!_)return[];var normalized=geojsonFlatten(geojsonNormalize(_)),coordinates=[];return normalized.features.forEach((function(feature){feature.geometry&&(coordinates=coordinates.concat(flatten(feature.geometry.coordinates)))})),coordinates}},964:function(module,exports){module.exports=function e(t){switch(t&&t.type||null){case"FeatureCollection":return t.features=t.features.reduce((function(t,r){return t.concat(e(r))}),[]),t;case"Feature":return t.geometry?e(t.geometry).map((function(e){var r={type:"Feature",properties:JSON.parse(JSON.stringify(t.properties)),geometry:e};return void 0!==t.id&&(r.id=t.id),r})):t;case"MultiPoint":return t.coordinates.map((function(e){return{type:"Point",coordinates:e}}));case"MultiPolygon":return t.coordinates.map((function(e){return{type:"Polygon",coordinates:e}}));case"MultiLineString":return t.coordinates.map((function(e){return{type:"LineString",coordinates:e}}));case"GeometryCollection":return t.geometries.map(e).reduce((function(e,t){return e.concat(t)}),[]);case"Point":case"Polygon":case"LineString":return[t]}}},965:function(module,exports){module.exports=function flatten(list){return function _flatten(list){if(Array.isArray(list)&&list.length&&"number"==typeof list[0])return[list];return list.reduce((function(acc,item){return Array.isArray(item)&&Array.isArray(item[0])?acc.concat(_flatten(item)):(acc.push(item),acc)}),[])}(list)}},966:function(module,exports){var traverse=module.exports=function(obj){return new Traverse(obj)};function Traverse(obj){this.value=obj}function walk(root,cb,immutable){var path=[],parents=[],alive=!0;return function walker(node_){var node=immutable?copy(node_):node_,modifiers={},keepGoing=!0,state={node:node,node_:node_,path:[].concat(path),parent:parents[parents.length-1],parents:parents,key:path.slice(-1)[0],isRoot:0===path.length,level:path.length,circular:null,update:function(x,stopHere){state.isRoot||(state.parent.node[state.key]=x),state.node=x,stopHere&&(keepGoing=!1)},delete:function(stopHere){delete state.parent.node[state.key],stopHere&&(keepGoing=!1)},remove:function(stopHere){isArray(state.parent.node)?state.parent.node.splice(state.key,1):delete state.parent.node[state.key],stopHere&&(keepGoing=!1)},keys:null,before:function(f){modifiers.before=f},after:function(f){modifiers.after=f},pre:function(f){modifiers.pre=f},post:function(f){modifiers.post=f},stop:function(){alive=!1},block:function(){keepGoing=!1}};if(!alive)return state;function updateState(){if("object"==typeof state.node&&null!==state.node){state.keys&&state.node_===state.node||(state.keys=objectKeys(state.node)),state.isLeaf=0==state.keys.length;for(var i=0;i<parents.length;i++)if(parents[i].node_===node_){state.circular=parents[i];break}}else state.isLeaf=!0,state.keys=null;state.notLeaf=!state.isLeaf,state.notRoot=!state.isRoot}updateState();var ret=cb.call(state,state.node);return void 0!==ret&&state.update&&state.update(ret),modifiers.before&&modifiers.before.call(state,state.node),keepGoing?("object"!=typeof state.node||null===state.node||state.circular||(parents.push(state),updateState(),forEach(state.keys,(function(key,i){path.push(key),modifiers.pre&&modifiers.pre.call(state,state.node[key],key);var child=walker(state.node[key]);immutable&&hasOwnProperty.call(state.node,key)&&(state.node[key]=child.node),child.isLast=i==state.keys.length-1,child.isFirst=0==i,modifiers.post&&modifiers.post.call(state,child),path.pop()})),parents.pop()),modifiers.after&&modifiers.after.call(state,state.node),state):state}(root).node}function copy(src){if("object"==typeof src&&null!==src){var dst;if(isArray(src))dst=[];else if(function isDate(obj){return"[object Date]"===toS(obj)}(src))dst=new Date(src.getTime?src.getTime():src);else if(function isRegExp(obj){return"[object RegExp]"===toS(obj)}(src))dst=new RegExp(src);else if(function isError(obj){return"[object Error]"===toS(obj)}(src))dst={message:src.message};else if(function isBoolean(obj){return"[object Boolean]"===toS(obj)}(src))dst=new Boolean(src);else if(function isNumber(obj){return"[object Number]"===toS(obj)}(src))dst=new Number(src);else if(function isString(obj){return"[object String]"===toS(obj)}(src))dst=new String(src);else if(Object.create&&Object.getPrototypeOf)dst=Object.create(Object.getPrototypeOf(src));else if(src.constructor===Object)dst={};else{var proto=src.constructor&&src.constructor.prototype||src.__proto__||{},T=function(){};T.prototype=proto,dst=new T}return forEach(objectKeys(src),(function(key){dst[key]=src[key]})),dst}return src}Traverse.prototype.get=function(ps){for(var node=this.value,i=0;i<ps.length;i++){var key=ps[i];if(!node||!hasOwnProperty.call(node,key)){node=void 0;break}node=node[key]}return node},Traverse.prototype.has=function(ps){for(var node=this.value,i=0;i<ps.length;i++){var key=ps[i];if(!node||!hasOwnProperty.call(node,key))return!1;node=node[key]}return!0},Traverse.prototype.set=function(ps,value){for(var node=this.value,i=0;i<ps.length-1;i++){var key=ps[i];hasOwnProperty.call(node,key)||(node[key]={}),node=node[key]}return node[ps[i]]=value,value},Traverse.prototype.map=function(cb){return walk(this.value,cb,!0)},Traverse.prototype.forEach=function(cb){return this.value=walk(this.value,cb,!1),this.value},Traverse.prototype.reduce=function(cb,init){var skip=1===arguments.length,acc=skip?this.value:init;return this.forEach((function(x){this.isRoot&&skip||(acc=cb.call(this,acc,x))})),acc},Traverse.prototype.paths=function(){var acc=[];return this.forEach((function(x){acc.push(this.path)})),acc},Traverse.prototype.nodes=function(){var acc=[];return this.forEach((function(x){acc.push(this.node)})),acc},Traverse.prototype.clone=function(){var parents=[],nodes=[];return function clone(src){for(var i=0;i<parents.length;i++)if(parents[i]===src)return nodes[i];if("object"==typeof src&&null!==src){var dst=copy(src);return parents.push(src),nodes.push(dst),forEach(objectKeys(src),(function(key){dst[key]=clone(src[key])})),parents.pop(),nodes.pop(),dst}return src}(this.value)};var objectKeys=Object.keys||function keys(obj){var res=[];for(var key in obj)res.push(key);return res};function toS(obj){return Object.prototype.toString.call(obj)}var isArray=Array.isArray||function isArray(xs){return"[object Array]"===Object.prototype.toString.call(xs)},forEach=function(xs,fn){if(xs.forEach)return xs.forEach(fn);for(var i=0;i<xs.length;i++)fn(xs[i],i,xs)};forEach(objectKeys(Traverse.prototype),(function(key){traverse[key]=function(obj){var args=[].slice.call(arguments,1),t=new Traverse(obj);return t[key].apply(t,args)}}));var hasOwnProperty=Object.hasOwnProperty||function(obj,key){return key in obj}},967:function(module,exports){function Extent(bbox){if(!(this instanceof Extent))return new Extent(bbox);this._bbox=bbox||[1/0,1/0,-1/0,-1/0],this._valid=!!bbox}module.exports=Extent,Extent.prototype.include=function(ll){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],ll[0]),this._bbox[1]=Math.min(this._bbox[1],ll[1]),this._bbox[2]=Math.max(this._bbox[2],ll[0]),this._bbox[3]=Math.max(this._bbox[3],ll[1]),this},Extent.prototype.equals=function(_){var other;return other=_ instanceof Extent?_.bbox():_,this._bbox[0]==other[0]&&this._bbox[1]==other[1]&&this._bbox[2]==other[2]&&this._bbox[3]==other[3]},Extent.prototype.center=function(_){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},Extent.prototype.union=function(_){var other;return this._valid=!0,other=_ instanceof Extent?_.bbox():_,this._bbox[0]=Math.min(this._bbox[0],other[0]),this._bbox[1]=Math.min(this._bbox[1],other[1]),this._bbox[2]=Math.max(this._bbox[2],other[2]),this._bbox[3]=Math.max(this._bbox[3],other[3]),this},Extent.prototype.bbox=function(){return this._valid?this._bbox:null},Extent.prototype.contains=function(ll){if(!ll)return this._fastContains();if(!this._valid)return null;var lon=ll[0],lat=ll[1];return this._bbox[0]<=lon&&this._bbox[1]<=lat&&this._bbox[2]>=lon&&this._bbox[3]>=lat},Extent.prototype.intersect=function(_){return this._valid?(other=_ instanceof Extent?_.bbox():_,!(this._bbox[0]>other[2]||this._bbox[2]<other[0]||this._bbox[3]<other[1]||this._bbox[1]>other[3])):null;var other},Extent.prototype._fastContains=function(){if(!this._valid)return new Function("return null;");var body="return "+this._bbox[0]+"<= ll[0] &&"+this._bbox[1]+"<= ll[1] &&"+this._bbox[2]+">= ll[0] &&"+this._bbox[3]+">= ll[1]";return new Function("ll",body)},Extent.prototype.polygon=function(){return this._valid?{type:"Polygon",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null}},968:function(module,exports,__webpack_require__){const{noTarget:noTarget,isOfMetaType:isOfMetaType,isInactiveFeature:isInactiveFeature,isShiftDown:isShiftDown}=__webpack_require__(919),createSupplementaryPoints=__webpack_require__(933),constrainFeatureMovement=__webpack_require__(935),doubleClickZoom=__webpack_require__(924),Constants=__webpack_require__(918),CommonSelectors=__webpack_require__(919),moveFeatures=__webpack_require__(934),isVertex=isOfMetaType(Constants.meta.VERTEX),isMidpoint=isOfMetaType(Constants.meta.MIDPOINT),DirectSelect={fireUpdate:function(){this.map.fire(Constants.events.UPDATE,{action:Constants.updateActions.CHANGE_COORDINATES,features:this.getSelected().map(f=>f.toGeoJSON())})},fireActionable:function(state){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:state.selectedCoordPaths.length>0})},startDragging:function(state,e){this.map.dragPan.disable(),state.canDragMove=!0,state.dragMoveLocation=e.lngLat},stopDragging:function(state){this.map.dragPan.enable(),state.dragMoving=!1,state.canDragMove=!1,state.dragMoveLocation=null},onVertex:function(state,e){this.startDragging(state,e);const about=e.featureTarget.properties,selectedIndex=state.selectedCoordPaths.indexOf(about.coord_path);isShiftDown(e)||-1!==selectedIndex?isShiftDown(e)&&-1===selectedIndex&&state.selectedCoordPaths.push(about.coord_path):state.selectedCoordPaths=[about.coord_path];const selectedCoordinates=this.pathsToCoordinates(state.featureId,state.selectedCoordPaths);this.setSelectedCoordinates(selectedCoordinates)},onMidpoint:function(state,e){this.startDragging(state,e);const about=e.featureTarget.properties;state.feature.addCoordinate(about.coord_path,about.lng,about.lat),this.fireUpdate(),state.selectedCoordPaths=[about.coord_path]},pathsToCoordinates:function(featureId,paths){return paths.map(coord_path=>({feature_id:featureId,coord_path:coord_path}))},onFeature:function(state,e){0===state.selectedCoordPaths.length?this.startDragging(state,e):this.stopDragging(state)},dragFeature:function(state,e,delta){moveFeatures(this.getSelected(),delta),state.dragMoveLocation=e.lngLat},dragVertex:function(state,e,delta){const selectedCoords=state.selectedCoordPaths.map(coord_path=>state.feature.getCoordinate(coord_path)),selectedCoordPoints=selectedCoords.map(coords=>({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.POINT,coordinates:coords}})),constrainedDelta=constrainFeatureMovement(selectedCoordPoints,delta);for(let i=0;i<selectedCoords.length;i++){const coord=selectedCoords[i];state.feature.updateCoordinate(state.selectedCoordPaths[i],coord[0]+constrainedDelta.lng,coord[1]+constrainedDelta.lat)}},clickNoTarget:function(){this.changeMode(Constants.modes.SIMPLE_SELECT)},clickInactive:function(){this.changeMode(Constants.modes.SIMPLE_SELECT)},clickActiveFeature:function(state){state.selectedCoordPaths=[],this.clearSelectedCoordinates(),state.feature.changed()},onSetup:function(opts){const featureId=opts.featureId,feature=this.getFeature(featureId);if(!feature)throw new Error("You must provide a featureId to enter direct_select mode");if(feature.type===Constants.geojsonTypes.POINT)throw new TypeError("direct_select mode doesn't handle point features");const state={featureId:featureId,feature:feature,dragMoveLocation:opts.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:opts.coordPath?[opts.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(featureId,state.selectedCoordPaths)),this.setSelected(featureId),doubleClickZoom.disable(this),this.setActionableState({trash:!0}),state},onStop:function(){doubleClickZoom.enable(this),this.clearSelectedCoordinates()},toDisplayFeatures:function(state,geojson,push){state.featureId===geojson.properties.id?(geojson.properties.active=Constants.activeStates.ACTIVE,push(geojson),createSupplementaryPoints(geojson,{map:this.map,midpoints:!0,selectedPaths:state.selectedCoordPaths}).forEach(push)):(geojson.properties.active=Constants.activeStates.INACTIVE,push(geojson)),this.fireActionable(state)},onTrash:function(state){state.selectedCoordPaths.sort().reverse().forEach(id=>state.feature.removeCoordinate(id)),this.fireUpdate(),state.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(state),!1===state.feature.isValid()&&(this.deleteFeature([state.featureId]),this.changeMode(Constants.modes.SIMPLE_SELECT,{}))},onMouseMove:function(state,e){const isFeature=CommonSelectors.isActiveFeature(e),onVertex=isVertex(e),noCoords=0===state.selectedCoordPaths.length;isFeature&&noCoords?this.updateUIClasses({mouse:Constants.cursors.MOVE}):onVertex&&!noCoords?this.updateUIClasses({mouse:Constants.cursors.MOVE}):this.updateUIClasses({mouse:Constants.cursors.NONE}),this.stopDragging(state)},onMouseOut:function(state){state.dragMoving&&this.fireUpdate()}};DirectSelect.onTouchStart=DirectSelect.onMouseDown=function(state,e){return isVertex(e)?this.onVertex(state,e):CommonSelectors.isActiveFeature(e)?this.onFeature(state,e):isMidpoint(e)?this.onMidpoint(state,e):void 0},DirectSelect.onDrag=function(state,e){if(!0!==state.canDragMove)return;state.dragMoving=!0,e.originalEvent.stopPropagation();const delta={lng:e.lngLat.lng-state.dragMoveLocation.lng,lat:e.lngLat.lat-state.dragMoveLocation.lat};state.selectedCoordPaths.length>0?this.dragVertex(state,e,delta):this.dragFeature(state,e,delta),state.dragMoveLocation=e.lngLat},DirectSelect.onClick=function(state,e){return noTarget(e)?this.clickNoTarget(state,e):CommonSelectors.isActiveFeature(e)?this.clickActiveFeature(state,e):isInactiveFeature(e)?this.clickInactive(state,e):void this.stopDragging(state)},DirectSelect.onTap=function(state,e){return noTarget(e)?this.clickNoTarget(state,e):CommonSelectors.isActiveFeature(e)?this.clickActiveFeature(state,e):isInactiveFeature(e)?this.clickInactive(state,e):void 0},DirectSelect.onTouchEnd=DirectSelect.onMouseUp=function(state){state.dragMoving&&this.fireUpdate(),this.stopDragging(state)},module.exports=DirectSelect},969:function(module,exports,__webpack_require__){const CommonSelectors=__webpack_require__(919),Constants=__webpack_require__(918),DrawPoint={onSetup:function(){const point=this.newFeature({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.POINT,coordinates:[]}});return this.addFeature(point),this.clearSelectedFeatures(),this.updateUIClasses({mouse:Constants.cursors.ADD}),this.activateUIButton(Constants.types.POINT),this.setActionableState({trash:!0}),{point:point}},stopDrawingAndRemove:function(state){this.deleteFeature([state.point.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT)}};DrawPoint.onTap=DrawPoint.onClick=function(state,e){this.updateUIClasses({mouse:Constants.cursors.MOVE}),state.point.updateCoordinate("",e.lngLat.lng,e.lngLat.lat),this.map.fire(Constants.events.CREATE,{features:[state.point.toGeoJSON()]}),this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.point.id]})},DrawPoint.onStop=function(state){this.activateUIButton(),state.point.getCoordinate().length||this.deleteFeature([state.point.id],{silent:!0})},DrawPoint.toDisplayFeatures=function(state,geojson,display){const isActivePoint=geojson.properties.id===state.point.id;if(geojson.properties.active=isActivePoint?Constants.activeStates.ACTIVE:Constants.activeStates.INACTIVE,!isActivePoint)return display(geojson)},DrawPoint.onTrash=DrawPoint.stopDrawingAndRemove,DrawPoint.onKeyUp=function(state,e){if(CommonSelectors.isEscapeKey(e)||CommonSelectors.isEnterKey(e))return this.stopDrawingAndRemove(state,e)},module.exports=DrawPoint},970:function(module,exports,__webpack_require__){const CommonSelectors=__webpack_require__(919),doubleClickZoom=__webpack_require__(924),Constants=__webpack_require__(918),isEventAtCoordinates=__webpack_require__(937),createVertex=__webpack_require__(930),DrawPolygon={onSetup:function(){const polygon=this.newFeature({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.POLYGON,coordinates:[[]]}});return this.addFeature(polygon),this.clearSelectedFeatures(),doubleClickZoom.disable(this),this.updateUIClasses({mouse:Constants.cursors.ADD}),this.activateUIButton(Constants.types.POLYGON),this.setActionableState({trash:!0}),{polygon:polygon,currentVertexPosition:0}},clickAnywhere:function(state,e){if(state.currentVertexPosition>0&&isEventAtCoordinates(e,state.polygon.coordinates[0][state.currentVertexPosition-1]))return this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.polygon.id]});this.updateUIClasses({mouse:Constants.cursors.ADD}),state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),state.currentVertexPosition++,state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(state){return this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.polygon.id]})},onMouseMove:function(state,e){state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),CommonSelectors.isVertex(e)&&this.updateUIClasses({mouse:Constants.cursors.POINTER})}};DrawPolygon.onTap=DrawPolygon.onClick=function(state,e){return CommonSelectors.isVertex(e)?this.clickOnVertex(state,e):this.clickAnywhere(state,e)},DrawPolygon.onKeyUp=function(state,e){CommonSelectors.isEscapeKey(e)?(this.deleteFeature([state.polygon.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT)):CommonSelectors.isEnterKey(e)&&this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.polygon.id]})},DrawPolygon.onStop=function(state){this.updateUIClasses({mouse:Constants.cursors.NONE}),doubleClickZoom.enable(this),this.activateUIButton(),void 0!==this.getFeature(state.polygon.id)&&(state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`),state.polygon.isValid()?this.map.fire(Constants.events.CREATE,{features:[state.polygon.toGeoJSON()]}):(this.deleteFeature([state.polygon.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT,{},{silent:!0})))},DrawPolygon.toDisplayFeatures=function(state,geojson,display){const isActivePolygon=geojson.properties.id===state.polygon.id;if(geojson.properties.active=isActivePolygon?Constants.activeStates.ACTIVE:Constants.activeStates.INACTIVE,!isActivePolygon)return display(geojson);if(0===geojson.geometry.coordinates.length)return;const coordinateCount=geojson.geometry.coordinates[0].length;if(!(coordinateCount<3)){if(geojson.properties.meta=Constants.meta.FEATURE,display(createVertex(state.polygon.id,geojson.geometry.coordinates[0][0],"0.0",!1)),coordinateCount>3){const endPos=geojson.geometry.coordinates[0].length-3;display(createVertex(state.polygon.id,geojson.geometry.coordinates[0][endPos],`0.${endPos}`,!1))}if(coordinateCount<=4){const lineCoordinates=[[geojson.geometry.coordinates[0][0][0],geojson.geometry.coordinates[0][0][1]],[geojson.geometry.coordinates[0][1][0],geojson.geometry.coordinates[0][1][1]]];if(display({type:Constants.geojsonTypes.FEATURE,properties:geojson.properties,geometry:{coordinates:lineCoordinates,type:Constants.geojsonTypes.LINE_STRING}}),3===coordinateCount)return}return display(geojson)}},DrawPolygon.onTrash=function(state){this.deleteFeature([state.polygon.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT)},module.exports=DrawPolygon},971:function(module,exports,__webpack_require__){const CommonSelectors=__webpack_require__(919),isEventAtCoordinates=__webpack_require__(937),doubleClickZoom=__webpack_require__(924),Constants=__webpack_require__(918),createVertex=__webpack_require__(930),DrawLineString={onSetup:function(opts){const featureId=(opts=opts||{}).featureId;let line,currentVertexPosition,direction="forward";if(featureId){if(line=this.getFeature(featureId),!line)throw new Error("Could not find a feature with the provided featureId");let from=opts.from;if(from&&"Feature"===from.type&&from.geometry&&"Point"===from.geometry.type&&(from=from.geometry),from&&"Point"===from.type&&from.coordinates&&2===from.coordinates.length&&(from=from.coordinates),!from||!Array.isArray(from))throw new Error("Please use the `from` property to indicate which point to continue the line from");const lastCoord=line.coordinates.length-1;if(line.coordinates[lastCoord][0]===from[0]&&line.coordinates[lastCoord][1]===from[1])currentVertexPosition=lastCoord+1,line.addCoordinate(currentVertexPosition,...line.coordinates[lastCoord]);else{if(line.coordinates[0][0]!==from[0]||line.coordinates[0][1]!==from[1])throw new Error("`from` should match the point at either the start or the end of the provided LineString");direction="backwards",currentVertexPosition=0,line.addCoordinate(currentVertexPosition,...line.coordinates[0])}}else line=this.newFeature({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.LINE_STRING,coordinates:[]}}),currentVertexPosition=0,this.addFeature(line);return this.clearSelectedFeatures(),doubleClickZoom.disable(this),this.updateUIClasses({mouse:Constants.cursors.ADD}),this.activateUIButton(Constants.types.LINE),this.setActionableState({trash:!0}),{line:line,currentVertexPosition:currentVertexPosition,direction:direction}},clickAnywhere:function(state,e){if(state.currentVertexPosition>0&&isEventAtCoordinates(e,state.line.coordinates[state.currentVertexPosition-1])||"backwards"===state.direction&&isEventAtCoordinates(e,state.line.coordinates[state.currentVertexPosition+1]))return this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.line.id]});this.updateUIClasses({mouse:Constants.cursors.ADD}),state.line.updateCoordinate(state.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),"forward"===state.direction?(state.currentVertexPosition++,state.line.updateCoordinate(state.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):state.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(state){return this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.line.id]})},onMouseMove:function(state,e){state.line.updateCoordinate(state.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),CommonSelectors.isVertex(e)&&this.updateUIClasses({mouse:Constants.cursors.POINTER})}};DrawLineString.onTap=DrawLineString.onClick=function(state,e){if(CommonSelectors.isVertex(e))return this.clickOnVertex(state,e);this.clickAnywhere(state,e)},DrawLineString.onKeyUp=function(state,e){CommonSelectors.isEnterKey(e)?this.changeMode(Constants.modes.SIMPLE_SELECT,{featureIds:[state.line.id]}):CommonSelectors.isEscapeKey(e)&&(this.deleteFeature([state.line.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT))},DrawLineString.onStop=function(state){doubleClickZoom.enable(this),this.activateUIButton(),void 0!==this.getFeature(state.line.id)&&(state.line.removeCoordinate(`${state.currentVertexPosition}`),state.line.isValid()?this.map.fire(Constants.events.CREATE,{features:[state.line.toGeoJSON()]}):(this.deleteFeature([state.line.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT,{},{silent:!0})))},DrawLineString.onTrash=function(state){this.deleteFeature([state.line.id],{silent:!0}),this.changeMode(Constants.modes.SIMPLE_SELECT)},DrawLineString.toDisplayFeatures=function(state,geojson,display){const isActiveLine=geojson.properties.id===state.line.id;if(geojson.properties.active=isActiveLine?Constants.activeStates.ACTIVE:Constants.activeStates.INACTIVE,!isActiveLine)return display(geojson);geojson.geometry.coordinates.length<2||(geojson.properties.meta=Constants.meta.FEATURE,display(createVertex(state.line.id,geojson.geometry.coordinates["forward"===state.direction?geojson.geometry.coordinates.length-2:1],`${"forward"===state.direction?geojson.geometry.coordinates.length-2:1}`,!1)),display(geojson))},module.exports=DrawLineString},972:function(module,exports,__webpack_require__){const isEqual=__webpack_require__(973),normalize=__webpack_require__(936),hat=__webpack_require__(926),featuresAt=__webpack_require__(920),stringSetsAreEqual=__webpack_require__(974),geojsonhint=__webpack_require__(975),Constants=__webpack_require__(918),StringSet=__webpack_require__(921),featureTypes={Polygon:__webpack_require__(928),LineString:__webpack_require__(927),Point:__webpack_require__(925),MultiPolygon:__webpack_require__(923),MultiLineString:__webpack_require__(923),MultiPoint:__webpack_require__(923)};module.exports=function(ctx,api){return api.modes=Constants.modes,api.getFeatureIdsAt=function(point){return featuresAt.click({point:point},null,ctx).map(feature=>feature.properties.id)},api.getSelectedIds=function(){return ctx.store.getSelectedIds()},api.getSelected=function(){return{type:Constants.geojsonTypes.FEATURE_COLLECTION,features:ctx.store.getSelectedIds().map(id=>ctx.store.get(id)).map(feature=>feature.toGeoJSON())}},api.getSelectedPoints=function(){return{type:Constants.geojsonTypes.FEATURE_COLLECTION,features:ctx.store.getSelectedCoordinates().map(coordinate=>({type:Constants.geojsonTypes.FEATURE,properties:{},geometry:{type:Constants.geojsonTypes.POINT,coordinates:coordinate.coordinates}}))}},api.set=function(featureCollection){if(void 0===featureCollection.type||featureCollection.type!==Constants.geojsonTypes.FEATURE_COLLECTION||!Array.isArray(featureCollection.features))throw new Error("Invalid FeatureCollection");const renderBatch=ctx.store.createRenderBatch();let toDelete=ctx.store.getAllIds().slice();const newIds=api.add(featureCollection),newIdsLookup=new StringSet(newIds);return toDelete=toDelete.filter(id=>!newIdsLookup.has(id)),toDelete.length&&api.delete(toDelete),renderBatch(),newIds},api.add=function(geojson){const errors=geojsonhint.hint(geojson,{precisionWarning:!1}).filter(e=>"message"!==e.level);if(errors.length)throw new Error(errors[0].message);const ids=JSON.parse(JSON.stringify(normalize(geojson))).features.map(feature=>{if(feature.id=feature.id||hat(),null===feature.geometry)throw new Error("Invalid geometry: null");if(void 0===ctx.store.get(feature.id)||ctx.store.get(feature.id).type!==feature.geometry.type){const Model=featureTypes[feature.geometry.type];if(void 0===Model)throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);const internalFeature=new Model(ctx,feature);ctx.store.add(internalFeature)}else{const internalFeature=ctx.store.get(feature.id);internalFeature.properties=feature.properties,isEqual(internalFeature.getCoordinates(),feature.geometry.coordinates)||internalFeature.incomingCoords(feature.geometry.coordinates)}return feature.id});return ctx.store.render(),ids},api.get=function(id){const feature=ctx.store.get(id);if(feature)return feature.toGeoJSON()},api.getAll=function(){return{type:Constants.geojsonTypes.FEATURE_COLLECTION,features:ctx.store.getAll().map(feature=>feature.toGeoJSON())}},api.delete=function(featureIds){return ctx.store.delete(featureIds,{silent:!0}),api.getMode()!==Constants.modes.DIRECT_SELECT||ctx.store.getSelectedIds().length?ctx.store.render():ctx.events.changeMode(Constants.modes.SIMPLE_SELECT,void 0,{silent:!0}),api},api.deleteAll=function(){return ctx.store.delete(ctx.store.getAllIds(),{silent:!0}),api.getMode()===Constants.modes.DIRECT_SELECT?ctx.events.changeMode(Constants.modes.SIMPLE_SELECT,void 0,{silent:!0}):ctx.store.render(),api},api.changeMode=function(mode,modeOptions={}){return mode===Constants.modes.SIMPLE_SELECT&&api.getMode()===Constants.modes.SIMPLE_SELECT?stringSetsAreEqual(modeOptions.featureIds||[],ctx.store.getSelectedIds())?api:(ctx.store.setSelected(modeOptions.featureIds,{silent:!0}),ctx.store.render(),api):mode===Constants.modes.DIRECT_SELECT&&api.getMode()===Constants.modes.DIRECT_SELECT&&modeOptions.featureId===ctx.store.getSelectedIds()[0]?api:(ctx.events.changeMode(mode,modeOptions,{silent:!0}),api)},api.getMode=function(){return ctx.events.getMode()},api.trash=function(){return ctx.events.trash({silent:!0}),api},api.combineFeatures=function(){return ctx.events.combineFeatures({silent:!0}),api},api.uncombineFeatures=function(){return ctx.events.uncombineFeatures({silent:!0}),api},api.setFeatureProperty=function(featureId,property,value){return ctx.store.setFeatureProperty(featureId,property,value),api},api}},973:function(module,exports,__webpack_require__){(function(global,module){var argsTag="[object Arguments]",mapTag="[object Map]",objectTag="[object Object]",setTag="[object Set]",reIsHostCtor=/^\[object .+?Constructor\]$/,reIsUint=/^(?:0|[1-9]\d*)$/,typedArrayTags={};typedArrayTags["[object Float32Array]"]=typedArrayTags["[object Float64Array]"]=typedArrayTags["[object Int8Array]"]=typedArrayTags["[object Int16Array]"]=typedArrayTags["[object Int32Array]"]=typedArrayTags["[object Uint8Array]"]=typedArrayTags["[object Uint8ClampedArray]"]=typedArrayTags["[object Uint16Array]"]=typedArrayTags["[object Uint32Array]"]=!0,typedArrayTags[argsTag]=typedArrayTags["[object Array]"]=typedArrayTags["[object ArrayBuffer]"]=typedArrayTags["[object Boolean]"]=typedArrayTags["[object DataView]"]=typedArrayTags["[object Date]"]=typedArrayTags["[object Error]"]=typedArrayTags["[object Function]"]=typedArrayTags[mapTag]=typedArrayTags["[object Number]"]=typedArrayTags[objectTag]=typedArrayTags["[object RegExp]"]=typedArrayTags[setTag]=typedArrayTags["[object String]"]=typedArrayTags["[object WeakMap]"]=!1;var freeGlobal="object"==typeof global&&global&&global.Object===Object&&global,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")(),freeExports=exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,freeProcess=moduleExports&&freeGlobal.process,nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}(),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;function arraySome(array,predicate){for(var index=-1,length=null==array?0:array.length;++index<length;)if(predicate(array[index],index,array))return!0;return!1}function mapToArray(map){var index=-1,result=Array(map.size);return map.forEach((function(value,key){result[++index]=[key,value]})),result}function setToArray(set){var index=-1,result=Array(set.size);return set.forEach((function(value){result[++index]=value})),result}var uid,arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype,coreJsData=root["__core-js_shared__"],funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,maskSrcKey=(uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||""))?"Symbol(src)_1."+uid:"",nativeObjectToString=objectProto.toString,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Buffer=moduleExports?root.Buffer:void 0,Symbol=root.Symbol,Uint8Array=root.Uint8Array,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,symToStringTag=Symbol?Symbol.toStringTag:void 0,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:void 0,nativeKeys=function overArg(func,transform){return function(arg){return func(transform(arg))}}(Object.keys,Object),DataView=getNative(root,"DataView"),Map=getNative(root,"Map"),Promise=getNative(root,"Promise"),Set=getNative(root,"Set"),WeakMap=getNative(root,"WeakMap"),nativeCreate=getNative(Object,"create"),dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap),symbolProto=Symbol?Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function Hash(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function ListCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function MapCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function SetCache(values){var index=-1,length=null==values?0:values.length;for(this.__data__=new MapCache;++index<length;)this.add(values[index])}function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?function baseTimes(n,iteratee){for(var index=-1,result=Array(n);++index<n;)result[index]=iteratee(index);return result}(value.length,String):[],length=result.length;for(var key in value)!inherited&&!hasOwnProperty.call(value,key)||skipIndexes&&("length"==key||isBuff&&("offset"==key||"parent"==key)||isType&&("buffer"==key||"byteLength"==key||"byteOffset"==key)||isIndex(key,length))||result.push(key);return result}function assocIndexOf(array,key){for(var length=array.length;length--;)if(eq(array[length][0],key))return length;return-1}function baseGetTag(value){return null==value?void 0===value?"[object Undefined]":"[object Null]":symToStringTag&&symToStringTag in Object(value)?function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);unmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]);return result}(value):function objectToString(value){return nativeObjectToString.call(value)}(value)}function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}function baseIsEqual(value,other,bitmask,customizer,stack){return value===other||(null==value||null==other||!isObjectLike(value)&&!isObjectLike(other)?value!=value&&other!=other:function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?"[object Array]":getTag(object),othTag=othIsArr?"[object Array]":getTag(other),objIsObj=(objTag=objTag==argsTag?objectTag:objTag)==objectTag,othIsObj=(othTag=othTag==argsTag?objectTag:othTag)==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other))return!1;objIsArr=!0,objIsObj=!1}if(isSameTag&&!objIsObj)return stack||(stack=new Stack),objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case"[object DataView]":if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset)return!1;object=object.buffer,other=other.buffer;case"[object ArrayBuffer]":return!(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other)));case"[object Boolean]":case"[object Date]":case"[object Number]":return eq(+object,+other);case"[object Error]":return object.name==other.name&&object.message==other.message;case"[object RegExp]":case"[object String]":return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=1&bitmask;if(convert||(convert=setToArray),object.size!=other.size&&!isPartial)return!1;var stacked=stack.get(object);if(stacked)return stacked==other;bitmask|=2,stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);return stack.delete(object),result;case"[object Symbol]":if(symbolValueOf)return symbolValueOf.call(object)==symbolValueOf.call(other)}return!1}(object,other,objTag,bitmask,customizer,equalFunc,stack);if(!(1&bitmask)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;return stack||(stack=new Stack),equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag)return!1;return stack||(stack=new Stack),function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=1&bitmask,objProps=getAllKeys(object),objLength=objProps.length,othLength=getAllKeys(other).length;if(objLength!=othLength&&!isPartial)return!1;var index=objLength;for(;index--;){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key)))return!1}var stacked=stack.get(object);if(stacked&&stack.get(other))return stacked==other;var result=!0;stack.set(object,other),stack.set(other,object);var skipCtor=isPartial;for(;++index<objLength;){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer)var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);if(!(void 0===compared?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=!1;break}skipCtor||(skipCtor="constructor"==key)}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;objCtor!=othCtor&&"constructor"in object&&"constructor"in other&&!("function"==typeof objCtor&&objCtor instanceof objCtor&&"function"==typeof othCtor&&othCtor instanceof othCtor)&&(result=!1)}return stack.delete(object),stack.delete(other),result}(object,other,bitmask,customizer,equalFunc,stack)}(value,other,bitmask,customizer,baseIsEqual,stack))}function baseIsNative(value){return!(!isObject(value)||function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}(value))&&(isFunction(value)?reIsNative:reIsHostCtor).test(toSource(value))}function baseKeys(object){if(!function isPrototype(value){var Ctor=value&&value.constructor,proto="function"==typeof Ctor&&Ctor.prototype||objectProto;return value===proto}(object))return nativeKeys(object);var result=[];for(var key in Object(object))hasOwnProperty.call(object,key)&&"constructor"!=key&&result.push(key);return result}function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=1&bitmask,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength))return!1;var stacked=stack.get(array);if(stacked&&stack.get(other))return stacked==other;var index=-1,result=!0,seen=2&bitmask?new SetCache:void 0;for(stack.set(array,other),stack.set(other,array);++index<arrLength;){var arrValue=array[index],othValue=other[index];if(customizer)var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);if(void 0!==compared){if(compared)continue;result=!1;break}if(seen){if(!arraySome(other,(function(othValue,othIndex){if(key=othIndex,!seen.has(key)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack)))return seen.push(othIndex);var key}))){result=!1;break}}else if(arrValue!==othValue&&!equalFunc(arrValue,othValue,bitmask,customizer,stack)){result=!1;break}}return stack.delete(array),stack.delete(other),result}function getAllKeys(object){return function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:function arrayPush(array,values){for(var index=-1,length=values.length,offset=array.length;++index<length;)array[offset+index]=values[index];return array}(result,symbolsFunc(object))}(object,keys,getSymbols)}function getMapData(map,key){var data=map.__data__;return function isKeyable(value){var type=typeof value;return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value}(key)?data["string"==typeof key?"string":"hash"]:data.map}function getNative(object,key){var value=function getValue(object,key){return null==object?void 0:object[key]}(object,key);return baseIsNative(value)?value:void 0}Hash.prototype.clear=function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{},this.size=0},Hash.prototype.delete=function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];return this.size-=result?1:0,result},Hash.prototype.get=function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return"__lodash_hash_undefined__"===result?void 0:result}return hasOwnProperty.call(data,key)?data[key]:void 0},Hash.prototype.has=function hashHas(key){var data=this.__data__;return nativeCreate?void 0!==data[key]:hasOwnProperty.call(data,key)},Hash.prototype.set=function hashSet(key,value){var data=this.__data__;return this.size+=this.has(key)?0:1,data[key]=nativeCreate&&void 0===value?"__lodash_hash_undefined__":value,this},ListCache.prototype.clear=function listCacheClear(){this.__data__=[],this.size=0},ListCache.prototype.delete=function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);return!(index<0)&&(index==data.length-1?data.pop():splice.call(data,index,1),--this.size,!0)},ListCache.prototype.get=function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?void 0:data[index][1]},ListCache.prototype.has=function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1},ListCache.prototype.set=function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);return index<0?(++this.size,data.push([key,value])):data[index][1]=value,this},MapCache.prototype.clear=function mapCacheClear(){this.size=0,this.__data__={hash:new Hash,map:new(Map||ListCache),string:new Hash}},MapCache.prototype.delete=function mapCacheDelete(key){var result=getMapData(this,key).delete(key);return this.size-=result?1:0,result},MapCache.prototype.get=function mapCacheGet(key){return getMapData(this,key).get(key)},MapCache.prototype.has=function mapCacheHas(key){return getMapData(this,key).has(key)},MapCache.prototype.set=function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;return data.set(key,value),this.size+=data.size==size?0:1,this},SetCache.prototype.add=SetCache.prototype.push=function setCacheAdd(value){return this.__data__.set(value,"__lodash_hash_undefined__"),this},SetCache.prototype.has=function setCacheHas(value){return this.__data__.has(value)},Stack.prototype.clear=function stackClear(){this.__data__=new ListCache,this.size=0},Stack.prototype.delete=function stackDelete(key){var data=this.__data__,result=data.delete(key);return this.size=data.size,result},Stack.prototype.get=function stackGet(key){return this.__data__.get(key)},Stack.prototype.has=function stackHas(key){return this.__data__.has(key)},Stack.prototype.set=function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<199)return pairs.push([key,value]),this.size=++data.size,this;data=this.__data__=new MapCache(pairs)}return data.set(key,value),this.size=data.size,this};var getSymbols=nativeGetSymbols?function(object){return null==object?[]:(object=Object(object),function arrayFilter(array,predicate){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];predicate(value,index,array)&&(result[resIndex++]=value)}return result}(nativeGetSymbols(object),(function(symbol){return propertyIsEnumerable.call(object,symbol)})))}:function stubArray(){return[]},getTag=baseGetTag;function isIndex(value,length){return!!(length=null==length?9007199254740991:length)&&("number"==typeof value||reIsUint.test(value))&&value>-1&&value%1==0&&value<length}function toSource(func){if(null!=func){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}function eq(value,other){return value===other||value!=value&&other!=other}(DataView&&"[object DataView]"!=getTag(new DataView(new ArrayBuffer(1)))||Map&&getTag(new Map)!=mapTag||Promise&&"[object Promise]"!=getTag(Promise.resolve())||Set&&getTag(new Set)!=setTag||WeakMap&&"[object WeakMap]"!=getTag(new WeakMap))&&(getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return"[object DataView]";case mapCtorString:return mapTag;case promiseCtorString:return"[object Promise]";case setCtorString:return setTag;case weakMapCtorString:return"[object WeakMap]"}return result});var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")},isArray=Array.isArray;var isBuffer=nativeIsBuffer||function stubFalse(){return!1};function isFunction(value){if(!isObject(value))return!1;var tag=baseGetTag(value);return"[object Function]"==tag||"[object GeneratorFunction]"==tag||"[object AsyncFunction]"==tag||"[object Proxy]"==tag}function isLength(value){return"number"==typeof value&&value>-1&&value%1==0&&value<=9007199254740991}function isObject(value){var type=typeof value;return null!=value&&("object"==type||"function"==type)}function isObjectLike(value){return null!=value&&"object"==typeof value}var isTypedArray=nodeIsTypedArray?function baseUnary(func){return function(value){return func(value)}}(nodeIsTypedArray):function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]};function keys(object){return function isArrayLike(value){return null!=value&&isLength(value.length)&&!isFunction(value)}(object)?arrayLikeKeys(object):baseKeys(object)}module.exports=function isEqual(value,other){return baseIsEqual(value,other)}}).call(this,__webpack_require__(54),__webpack_require__(140)(module))},974:function(module,exports){module.exports=function(a,b){return a.length===b.length&&JSON.stringify(a.map(id=>id).sort())===JSON.stringify(b.map(id=>id).sort())}},975:function(module,exports,__webpack_require__){var jsonlint=__webpack_require__(976),geojsonHintObject=__webpack_require__(979);module.exports.hint=function hint(str,options){var gj,errors=[];if("object"==typeof str)gj=str;else{if("string"!=typeof str)return[{message:"Expected string or object as input",line:0}];try{gj=jsonlint.parse(str)}catch(e){var match=e.message.match(/line (\d+)/);return[{line:parseInt(match[1],10)-1,message:e.message,error:e}]}}return errors=errors.concat(geojsonHintObject.hint(gj,options))}},976:function(module,exports,__webpack_require__){(function(process,module){var jsonlint=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24],parser={trace:function trace(){},yy:{},symbols_:{error:2,JSONString:3,STRING:4,JSONNumber:5,NUMBER:6,JSONNullLiteral:7,NULL:8,JSONBooleanLiteral:9,TRUE:10,FALSE:11,JSONText:12,JSONValue:13,EOF:14,JSONObject:15,JSONArray:16,"{":17,"}":18,JSONMemberList:19,JSONMember:20,":":21,",":22,"[":23,"]":24,JSONElementList:25,$accept:0,$end:1},terminals_:{2:"error",4:"STRING",6:"NUMBER",8:"NULL",10:"TRUE",11:"FALSE",14:"EOF",17:"{",18:"}",21:":",22:",",23:"[",24:"]"},productions_:[0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:this.$=yytext.replace(/\\(\\|")/g,"$1").replace(/\\n/g,"\n").replace(/\\r/g,"\r").replace(/\\t/g,"\t").replace(/\\v/g,"\v").replace(/\\f/g,"\f").replace(/\\b/g,"\b");break;case 2:this.$=Number(yytext);break;case 3:this.$=null;break;case 4:this.$=!0;break;case 5:this.$=!1;break;case 6:return this.$=$$[$0-1];case 13:this.$={},Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 14:case 19:this.$=$$[$0-1],Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 15:this.$=[$$[$0-2],$$[$0]];break;case 16:this.$={},this.$[$$[$0][0]]=$$[$0][1];break;case 17:this.$=$$[$0-2],void 0!==$$[$0-2][$$[$0][0]]&&(this.$.__duplicateProperties__||Object.defineProperty(this.$,"__duplicateProperties__",{value:[],enumerable:!1}),this.$.__duplicateProperties__.push($$[$0][0])),$$[$0-2][$$[$0][0]]=$$[$0][1];break;case 18:this.$=[],Object.defineProperty(this.$,"__line__",{value:this._$.first_line,enumerable:!1});break;case 20:this.$=[$$[$0]];break;case 21:this.$=$$[$0-2],$$[$0-2].push($$[$0])}},table:[{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],defaultActions:{16:[2,6]},parseError:function parseError(str,hash){if(!hash.recoverable){function _parseError(msg,hash){this.message=msg,this.hash=hash}throw _parseError.prototype=Error,new _parseError(str,hash)}this.trace(str)},parse:function parse(input){var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1,args=lstack.slice.call(arguments,1),lexer=Object.create(this.lexer),sharedState={yy:{}};for(var k in this.yy)Object.prototype.hasOwnProperty.call(this.yy,k)&&(sharedState.yy[k]=this.yy[k]);lexer.setInput(input,sharedState.yy),sharedState.yy.lexer=lexer,sharedState.yy.parser=this,void 0===lexer.yylloc&&(lexer.yylloc={});var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;"function"==typeof sharedState.yy.parseError?this.parseError=sharedState.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var symbol,preErrorSymbol,state,action,r,p,len,newState,expected,lex=function(){var token;return"number"!=typeof(token=lexer.lex()||EOF)&&(token=self.symbols_[token]||token),token},yyval={};;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:(null==symbol&&(symbol=lex()),action=table[state]&&table[state][symbol]),void 0===action||!action.length||!action[0]){var errStr="";for(p in expected=[],table[state])this.terminals_[p]&&p>TERROR&&expected.push("'"+this.terminals_[p]+"'");errStr=lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(lexer.yytext),lstack.push(lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=lexer.yyleng,yytext=lexer.yytext,yylineno=lexer.yylineno,yyloc=lexer.yylloc,recovering>0&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),void 0!==(r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args))))return r;len&&(stack=stack.slice(0,-1*len*2),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0}}return!0}},lexer={EOF:1,parseError:function parseError(str,hash){if(!this.yy.parser)throw new Error(str);this.yy.parser.parseError(str,hash)},setInput:function(input,yy){return this.yy=yy||this.yy||{},this._input=input,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var ch=this._input[0];return this.yytext+=ch,this.yyleng++,this.offset++,this.match+=ch,this.matched+=ch,ch.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),ch},unput:function(ch){var len=ch.length,lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-len),this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),lines.length-1&&(this.yylineno-=lines.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-len]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;return next.length<20&&(next+=this._input.substr(0,20-next.length)),(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput(),c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer&&(backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(backup.yylloc.range=this.yylloc.range.slice(0))),(lines=match[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=lines.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length},this.yytext+=match[0],this.match+=match[0],this.matches=match,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(match[0].length),this.matched+=match[0],token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),token)return token;if(this._backtrack){for(var k in backup)this[k]=backup[k];return!1}return!1},next:function(){if(this.done)return this.EOF;var token,match,tempMatch,index;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var rules=this._currentRules(),i=0;i<rules.length;i++)if((tempMatch=this._input.match(this.rules[rules[i]]))&&(!match||tempMatch[0].length>match[0].length)){if(match=tempMatch,index=i,this.options.backtrack_lexer){if(!1!==(token=this.test_match(tempMatch,rules[i])))return token;if(this._backtrack){match=!1;continue}return!1}if(!this.options.flex)break}return match?!1!==(token=this.test_match(match,rules[index]))&&token:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function lex(){var r=this.next();return r||this.lex()},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function _currentRules(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function topState(n){return(n=this.conditionStack.length-1-Math.abs(n||0))>=0?this.conditionStack[n]:"INITIAL"},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){switch($avoiding_name_collisions){case 0:break;case 1:return 6;case 2:return yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2),4;case 3:return 17;case 4:return 18;case 5:return 23;case 6:return 24;case 7:return 22;case 8:return 21;case 9:return 10;case 10:return 11;case 11:return 8;case 12:return 14;case 13:return"INVALID"}},rules:[/^(?:\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\.[0-9]+)?([eE][-+]?[0-9]+)?\b)/,/^(?:"(?:\\[\\"bfnrt\/]|\\u[a-fA-F0-9]{4}|[^\\\0-\x09\x0a-\x1f"])*")/,/^(?:\{)/,/^(?:\})/,/^(?:\[)/,/^(?:\])/,/^(?:,)/,/^(?::)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:null\b)/,/^(?:$)/,/^(?:.)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13],inclusive:!0}}};function Parser(){this.yy={}}return parser.lexer=lexer,Parser.prototype=parser,parser.Parser=Parser,new Parser}();exports.parser=jsonlint,exports.Parser=jsonlint.Parser,exports.parse=function(){return jsonlint.parse.apply(jsonlint,arguments)},exports.main=function commonjsMain(args){args[1]||(console.log("Usage: "+args[0]+" FILE"),process.exit(1));var source=__webpack_require__(977).readFileSync(__webpack_require__(978).normalize(args[1]),"utf8");return exports.parser.parse(source)},__webpack_require__.c[__webpack_require__.s]===module&&exports.main(process.argv.slice(1))}).call(this,__webpack_require__(163),__webpack_require__(140)(module))},977:function(module,exports){},978:function(module,exports,__webpack_require__){(function(process){function normalizeArray(parts,allowAboveRoot){for(var up=0,i=parts.length-1;i>=0;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up--;up)parts.unshift("..");return parts}function filter(xs,f){if(xs.filter)return xs.filter(f);for(var res=[],i=0;i<xs.length;i++)f(xs[i],i,xs)&&res.push(xs[i]);return res}exports.resolve=function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");path&&(resolvedPath=path+"/"+resolvedPath,resolvedAbsolute="/"===path.charAt(0))}return(resolvedAbsolute?"/":"")+(resolvedPath=normalizeArray(filter(resolvedPath.split("/"),(function(p){return!!p})),!resolvedAbsolute).join("/"))||"."},exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash="/"===substr(path,-1);return(path=normalizeArray(filter(path.split("/"),(function(p){return!!p})),!isAbsolute).join("/"))||isAbsolute||(path="."),path&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},exports.isAbsolute=function(path){return"/"===path.charAt(0)},exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,(function(p,index){if("string"!=typeof p)throw new TypeError("Arguments to path.join must be strings");return p})).join("/"))},exports.relative=function(from,to){function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;end>=0&&""===arr[end];end--);return start>end?[]:arr.slice(start,end-start+1)}from=exports.resolve(from).substr(1),to=exports.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;i<length;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}var outputParts=[];for(i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return(outputParts=outputParts.concat(toParts.slice(samePartsLength))).join("/")},exports.sep="/",exports.delimiter=":",exports.dirname=function(path){if("string"!=typeof path&&(path+=""),0===path.length)return".";for(var code=path.charCodeAt(0),hasRoot=47===code,end=-1,matchedSlash=!0,i=path.length-1;i>=1;--i)if(47===(code=path.charCodeAt(i))){if(!matchedSlash){end=i;break}}else matchedSlash=!1;return-1===end?hasRoot?"/":".":hasRoot&&1===end?"/":path.slice(0,end)},exports.basename=function(path,ext){var f=function basename(path){"string"!=typeof path&&(path+="");var i,start=0,end=-1,matchedSlash=!0;for(i=path.length-1;i>=0;--i)if(47===path.charCodeAt(i)){if(!matchedSlash){start=i+1;break}}else-1===end&&(matchedSlash=!1,end=i+1);return-1===end?"":path.slice(start,end)}(path);return ext&&f.substr(-1*ext.length)===ext&&(f=f.substr(0,f.length-ext.length)),f},exports.extname=function(path){"string"!=typeof path&&(path+="");for(var startDot=-1,startPart=0,end=-1,matchedSlash=!0,preDotState=0,i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(47!==code)-1===end&&(matchedSlash=!1,end=i+1),46===code?-1===startDot?startDot=i:1!==preDotState&&(preDotState=1):-1!==startDot&&(preDotState=-1);else if(!matchedSlash){startPart=i+1;break}}return-1===startDot||-1===end||0===preDotState||1===preDotState&&startDot===end-1&&startDot===startPart+1?"":path.slice(startDot,end)};var substr="b"==="ab".substr(-1)?function(str,start,len){return str.substr(start,len)}:function(str,start,len){return start<0&&(start=str.length+start),str.substr(start,len)}}).call(this,__webpack_require__(163))},979:function(module,exports,__webpack_require__){var rightHandRule=__webpack_require__(980);module.exports.hint=function hint(gj,options){var errors=[],precisionWarningCount=0;function root(_){if(options&&!1===options.noDuplicateMembers||!_.__duplicateProperties__||errors.push({message:"An object contained duplicate members, making parsing ambigous: "+_.__duplicateProperties__.join(", "),line:_.__line__}),!requiredProperty(_,"type","string"))if(types[_.type])_&&types[_.type](_);else{var expectedType=typesLower[_.type.toLowerCase()];void 0!==expectedType?errors.push({message:"Expected "+expectedType+" but got "+_.type+" (case sensitive)",line:_.__line__}):errors.push({message:"The type "+_.type+" is unknown",line:_.__line__})}}function everyIs(_,type){return _.every((function(x){return null!==x&&typeof x===type}))}function requiredProperty(_,name,type){if(void 0===_[name])return errors.push({message:'"'+name+'" member required',line:_.__line__});if("array"===type){if(!Array.isArray(_[name]))return errors.push({message:'"'+name+'" member should be an array, but is an '+typeof _[name]+" instead",line:_.__line__})}else{if("object"===type&&_[name]&&_[name].constructor!==Object)return errors.push({message:'"'+name+'" member should be '+type+", but is an "+_[name].constructor.name+" instead",line:_.__line__});if(type&&typeof _[name]!==type)return errors.push({message:'"'+name+'" member should be '+type+", but is an "+typeof _[name]+" instead",line:_.__line__})}}function position(_,line){if(!Array.isArray(_))return errors.push({message:"position should be an array, is a "+typeof _+" instead",line:_.__line__||line});if(_.length<2)return errors.push({message:"position must have 2 or more elements",line:_.__line__||line});if(_.length>3)return errors.push({message:"position should not have more than 3 elements",level:"message",line:_.__line__||line});if(!everyIs(_,"number"))return errors.push({message:"each element in a position must be a number",line:_.__line__||line});if(options&&options.precisionWarning){if(10===precisionWarningCount)return precisionWarningCount+=1,errors.push({message:"truncated warnings: we've encountered coordinate precision warning 10 times, no more warnings will be reported",level:"message",line:_.__line__||line});precisionWarningCount<10&&_.forEach((function(num){var precision=0,decimalStr=String(num).split(".")[1];if(void 0!==decimalStr&&(precision=decimalStr.length),precision>6)return precisionWarningCount+=1,errors.push({message:"precision of coordinates should be reduced",level:"message",line:_.__line__||line})}))}}function positionArray(coords,type,depth,line){if(void 0===line&&void 0!==coords.__line__&&(line=coords.__line__),0===depth)return position(coords,line);if(1===depth&&type)if("LinearRing"===type){if(!Array.isArray(coords[coords.length-1]))return errors.push({message:"a number was found where a coordinate array should have been found: this needs to be nested more deeply",line:line}),!0;if(coords.length<4&&errors.push({message:"a LinearRing of coordinates needs to have four or more positions",line:line}),coords.length&&(coords[coords.length-1].length!==coords[0].length||!coords[coords.length-1].every((function(pos,index){return coords[0][index]===pos}))))return errors.push({message:"the first and last positions in a LinearRing of coordinates must be the same",line:line}),!0}else if("Line"===type&&coords.length<2)return errors.push({message:"a line needs to have two or more coordinates to be valid",line:line});if(Array.isArray(coords))return coords.map((function(c){return positionArray(c,type,depth-1,c.__line__||line)})).some((function(r){return r}));errors.push({message:"a number was found where a coordinate array should have been found: this needs to be nested more deeply",line:line})}function crs(_){if(_.crs){"object"==typeof _.crs&&_.crs.properties&&"urn:ogc:def:crs:OGC:1.3:CRS84"===_.crs.properties.name?errors.push({message:"old-style crs member is not recommended, this object is equivalent to the default and should be removed",line:_.__line__}):errors.push({message:"old-style crs member is not recommended",line:_.__line__})}}function bbox(_){if(_.bbox)return Array.isArray(_.bbox)?(everyIs(_.bbox,"number")||errors.push({message:"each element in a bbox member must be a number",line:_.bbox.__line__}),4!==_.bbox.length&&6!==_.bbox.length&&errors.push({message:"bbox must contain 4 elements (for 2D) or 6 elements (for 3D)",line:_.bbox.__line__}),errors.length):void errors.push({message:"bbox member must be an array of numbers, but is a "+typeof _.bbox,line:_.__line__})}function Feature(feature){crs(feature),bbox(feature),void 0!==feature.id&&"string"!=typeof feature.id&&"number"!=typeof feature.id&&errors.push({message:'Feature "id" member must have a string or number value',line:feature.__line__}),void 0!==feature.features&&errors.push({message:'Feature object cannot contain a "features" member',line:feature.__line__}),void 0!==feature.coordinates&&errors.push({message:'Feature object cannot contain a "coordinates" member',line:feature.__line__}),"Feature"!==feature.type&&errors.push({message:"GeoJSON features must have a type=feature member",line:feature.__line__}),requiredProperty(feature,"properties","object"),requiredProperty(feature,"geometry","object")||feature.geometry&&root(feature.geometry)}var types={Point:function Point(point){crs(point),bbox(point),function geometrySemantics(geom){void 0!==geom.properties&&errors.push({message:'geometry object cannot contain a "properties" member',line:geom.__line__}),void 0!==geom.geometry&&errors.push({message:'geometry object cannot contain a "geometry" member',line:geom.__line__}),void 0!==geom.features&&errors.push({message:'geometry object cannot contain a "features" member',line:geom.__line__})}(point),requiredProperty(point,"coordinates","array")||position(point.coordinates)},Feature:Feature,MultiPoint:function MultiPoint(multiPoint){crs(multiPoint),bbox(multiPoint),requiredProperty(multiPoint,"coordinates","array")||positionArray(multiPoint.coordinates,"",1)},LineString:function LineString(lineString){crs(lineString),bbox(lineString),requiredProperty(lineString,"coordinates","array")||positionArray(lineString.coordinates,"Line",1)},MultiLineString:function MultiLineString(multiLineString){crs(multiLineString),bbox(multiLineString),requiredProperty(multiLineString,"coordinates","array")||positionArray(multiLineString.coordinates,"Line",2)},FeatureCollection:function FeatureCollection(featureCollection){if(crs(featureCollection),bbox(featureCollection),void 0!==featureCollection.properties&&errors.push({message:'FeatureCollection object cannot contain a "properties" member',line:featureCollection.__line__}),void 0!==featureCollection.coordinates&&errors.push({message:'FeatureCollection object cannot contain a "coordinates" member',line:featureCollection.__line__}),!requiredProperty(featureCollection,"features","array")){if(!everyIs(featureCollection.features,"object"))return errors.push({message:"Every feature must be an object",line:featureCollection.__line__});featureCollection.features.forEach(Feature)}},GeometryCollection:function GeometryCollection(geometryCollection){crs(geometryCollection),bbox(geometryCollection),requiredProperty(geometryCollection,"geometries","array")||(everyIs(geometryCollection.geometries,"object")||errors.push({message:"The geometries array in a GeometryCollection must contain only geometry objects",line:geometryCollection.__line__}),1===geometryCollection.geometries.length&&errors.push({message:"GeometryCollection with a single geometry should be avoided in favor of single part or a single object of multi-part type",line:geometryCollection.geometries.__line__}),geometryCollection.geometries.forEach((function(geometry){geometry&&("GeometryCollection"===geometry.type&&errors.push({message:"GeometryCollection should avoid nested geometry collections",line:geometryCollection.geometries.__line__}),root(geometry))})))},Polygon:function Polygon(polygon){crs(polygon),bbox(polygon),requiredProperty(polygon,"coordinates","array")||positionArray(polygon.coordinates,"LinearRing",2)||rightHandRule(polygon,errors)},MultiPolygon:function MultiPolygon(multiPolygon){crs(multiPolygon),bbox(multiPolygon),requiredProperty(multiPolygon,"coordinates","array")||positionArray(multiPolygon.coordinates,"LinearRing",3)||rightHandRule(multiPolygon,errors)}},typesLower=Object.keys(types).reduce((function(prev,curr){return prev[curr.toLowerCase()]=curr,prev}),{});return"object"!=typeof gj||null==gj?(errors.push({message:"The root of a GeoJSON object must be an object.",line:0}),errors):(root(gj),errors.forEach((function(err){({}).hasOwnProperty.call(err,"line")&&void 0===err.line&&delete err.line})),errors)}},980:function(module,exports){function rad(x){return x*Math.PI/180}function isRingClockwise(coords){var area=0;if(coords.length>2)for(var p1,p2,i=0;i<coords.length-1;i++)p1=coords[i],area+=rad((p2=coords[i+1])[0]-p1[0])*(2+Math.sin(rad(p1[1]))+Math.sin(rad(p2[1])));return area>=0}function isPolyRHR(coords){if(coords&&coords.length>0){if(isRingClockwise(coords[0]))return!1;if(!coords.slice(1,coords.length).every(isRingClockwise))return!1}return!0}module.exports=function validateRightHandRule(geometry,errors){(function rightHandRule(geometry){return"Polygon"===geometry.type?isPolyRHR(geometry.coordinates):"MultiPolygon"===geometry.type?geometry.coordinates.every(isPolyRHR):void 0})(geometry)||errors.push({message:"Polygons and MultiPolygons should follow the right-hand rule",level:"message",line:geometry.__line__})}},982:function(module,exports,__webpack_require__){const runSetup=__webpack_require__(938),setupOptions=__webpack_require__(956),setupAPI=__webpack_require__(972),Constants=__webpack_require__(918);module.exports=function(options){!function(options,api){const ctx={options:options=setupOptions(options)};api=setupAPI(ctx,api),ctx.api=api;const setup=runSetup(ctx);api.onAdd=setup.onAdd,api.onRemove=setup.onRemove,api.types=Constants.types,api.options=options}(options,this)},module.exports.modes=__webpack_require__(932)}}]);
//# sourceMappingURL=4.f9d3c8a8b9e9e2613b69.bundle.js.map